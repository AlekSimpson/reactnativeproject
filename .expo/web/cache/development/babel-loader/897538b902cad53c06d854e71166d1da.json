{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nvar _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/PauseOrCancelView.js\";\nimport * as React from 'react';\nimport { useEffect, useState, useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updatePrinter } from \"./updatePrinters.js\";\nimport { ConfirmCancelView } from \"./ConfirmCancelView.js\";\nimport { Divider } from \"./Divider.js\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FontAwesome5 as FA } from '@expo/vector-icons';\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar CircleDiameter = windowWidth / 1.5;\nvar toggleControlCodes = {\n  2: 3,\n  3: 2\n};\nvar styles = StyleSheet.create({\n  view: {\n    flex: 1,\n    justifyContent: 'center',\n    marginTop: windowHeight / 22\n  }\n});\n\nvar ButtonInfo = function ButtonInfo(title, icon) {\n  _classCallCheck(this, ButtonInfo);\n\n  this.buttonTitle = title;\n  this.buttonIcon = icon;\n};\n\nvar infoDict = {\n  2: new ButtonInfo('Play', 'play'),\n  3: new ButtonInfo('Pause', 'pause')\n};\n\nfunction PauseOrCancelView(printer) {\n  var temp;\n  var listPrinters = useSelector(function (state) {\n    temp = _toConsumableArray(state.listP);\n    return state.listP;\n  });\n  var dispatch = useDispatch();\n\n  function findPrinter() {\n    var returnValue;\n    console.log('getting here');\n\n    for (i = 0; i < temp.length; i++) {\n      if (temp[i].id == printer.printer.id) {\n        returnValue = i;\n        break;\n      }\n    }\n\n    return returnValue;\n  }\n\n  function updateStatus(newStatus) {\n    var i = findPrinter();\n    temp[i].status = newStatus;\n    dispatch(updatePrinter(temp));\n    printer.toggleShowPause();\n  }\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showConfirmCancel = _useState2[0],\n      setConfirmCancel = _useState2[1];\n\n  return React.createElement(React.Fragment, null, !showConfirmCancel && React.createElement(View, {\n    style: styles.view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      alignContent: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      return updateStatus(toggleControlCodes[printer.printer.status]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, React.createElement(FA, {\n    name: infoDict[printer.printer.status].buttonIcon,\n    color: \"white\",\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 20,\n      marginLeft: 10,\n      marginTop: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, infoDict[printer.printer.status].buttonTitle)), React.createElement(Divider, {\n    width: CircleDiameter - 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      alignContent: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      return setConfirmCancel(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, React.createElement(FA, {\n    name: \"stop\",\n    color: \"red\",\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'red',\n      fontSize: 20,\n      marginLeft: 10,\n      marginTop: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))), showConfirmCancel && React.createElement(ConfirmCancelView, {\n    printer: printer.printer,\n    toggleBack: printer.toggleShowPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport { PauseOrCancelView };","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/PauseOrCancelView.js"],"names":["React","useEffect","useState","useReducer","useSelector","useDispatch","updatePrinter","ConfirmCancelView","Divider","TouchableOpacity","FontAwesome5","FA","windowWidth","Dimensions","get","width","windowHeight","height","CircleDiameter","toggleControlCodes","styles","StyleSheet","create","view","flex","justifyContent","marginTop","ButtonInfo","title","icon","buttonTitle","buttonIcon","infoDict","PauseOrCancelView","printer","temp","listPrinters","state","listP","dispatch","findPrinter","returnValue","console","log","i","length","id","updateStatus","newStatus","status","toggleShowPause","showConfirmCancel","setConfirmCancel","flexDirection","alignContent","color","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, useState, useReducer } from 'react'\nimport { View, Text, Button, StyleSheet, Image, ScrollView, Dimensions, ImageBackground } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updatePrinter } from './updatePrinters.js';\nimport { ConfirmCancelView } from './ConfirmCancelView.js'\nimport { Divider } from './Divider.js';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FontAwesome5 as FA } from '@expo/vector-icons';\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst CircleDiameter = (windowWidth / 1.5)\n\nlet toggleControlCodes = { 2: 3, 3: 2 } \n\nconst styles = StyleSheet.create({\n  view:\n  {\n    flex: 1,\n    justifyContent: 'center',\n    marginTop: windowHeight / 22\n  }\n})\n\nclass ButtonInfo\n{\n  constructor(title, icon)\n  {\n    this.buttonTitle = title;\n    this.buttonIcon = icon;\n  }\n}\n\nvar infoDict = { 2: new ButtonInfo('Play', 'play'), 3: new ButtonInfo('Pause', 'pause') }\n\nfunction PauseOrCancelView(printer)\n{\n  var temp;\n  const listPrinters = useSelector(state => { temp = [...state.listP]; return state.listP })\n  const dispatch = useDispatch()\n\n  //Returns the index of the printer that was passed in\n  function findPrinter()\n  {\n    var returnValue;\n    console.log('getting here')\n    for (i = 0; i < temp.length; i++)\n    {\n      if (temp[i].id == printer.printer.id)\n      {\n        returnValue = i\n        break\n      }\n    }\n    return returnValue\n  }\n\n  //Updates the global state of a certain printer\n  function updateStatus(newStatus)\n  {\n    let i = findPrinter()\n\n    temp[i].status = newStatus\n\n    dispatch(updatePrinter(temp))\n    printer.toggleShowPause()\n  }\n\n  const [showConfirmCancel, setConfirmCancel] = useState(false)\n\n  //Cancel button should go to the confirm cancel view, action for cancel button //updateStatus(1)\n  return(\n    <>\n      {(!showConfirmCancel) &&\n        <View style={styles.view}>\n          <TouchableOpacity style={{ flexDirection: 'row', alignContent: 'center', justifyContent: 'center' }} onPress={() => updateStatus(toggleControlCodes[printer.printer.status])}>\n            <FA name={infoDict[printer.printer.status].buttonIcon} color='white' size={30}/>\n            <Text style={{ color: 'white', fontSize: 20, marginLeft: 10, marginTop: 5 }}>{infoDict[printer.printer.status].buttonTitle}</Text>\n          </TouchableOpacity>\n          <Divider width={CircleDiameter - 20}/>\n          <TouchableOpacity style={{ flexDirection: 'row', alignContent: 'center', justifyContent: 'center' }} onPress={() => setConfirmCancel(true)}>\n            <FA name='stop' color='red' size={30}/>\n            <Text style={{ color: 'red', fontSize: 20, marginLeft: 10, marginTop: 5 }}>Cancel</Text>\n          </TouchableOpacity>\n        </View>\n      }\n      {(showConfirmCancel) &&\n        <ConfirmCancelView printer={printer.printer} toggleBack={printer.toggleShowPause}/>\n      }\n    </>\n  )\n}\n\nexport {PauseOrCancelView};"]},"metadata":{},"sourceType":"module"}
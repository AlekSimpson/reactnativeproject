{"ast":null,"code":"var _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/CardView.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { CompletionView } from \"./CompletionView.js\";\nimport { Entypo } from '@expo/vector-icons';\nimport { lighter } from \"./Colors.js\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CardViewStyles as styles } from \"./Styles.js\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar width = windowWidth >= 700 ? windowWidth / 3 : windowWidth;\nvar CircleSize = windowWidth / (windowWidth / (windowHeight / 6));\nvar imageHeight = windowHeight / 4;\nvar StatusCodes = {\n  0: 'Offline',\n  1: 'Asleep',\n  2: 'Printing',\n  3: 'Paused'\n};\n\nfunction CardView(_ref) {\n  var printer = _ref.printer;\n  var images = useSelector(function (state) {\n    return state.imageDict;\n  });\n  var percentFinished = 0;\n\n  if (printer.printerState != null) {\n    if (printer.printerState.progress != null) {\n      percentFinished = Math.round(printer.printerState.progress * 100);\n    }\n  }\n\n  return React.createElement(ImageBackground, {\n    imageStyle: {\n      borderRadius: 10\n    },\n    source: {\n      uri: images[printer.id]\n    },\n    defaultSource: require(\"./LocalAssets/default4.png\"),\n    loadingIndicatorSource: require(\"./LocalAssets/default4.png\"),\n    style: styles.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: width - 30,\n      height: 37,\n      backgroundColor: \"rgb(25, 40, 65)\",\n      opacity: .8,\n      position: 'absolute',\n      bottom: 0,\n      borderBottomLeftRadius: 10,\n      borderBottomRightRadius: 10,\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.printerNameText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, printer.name), React.createElement(Text, {\n    style: styles.printerStatusText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Status: \", StatusCodes[printer.status]), React.createElement(Entypo, {\n    name: \"chevron-right\",\n    color: \"#7CFC00\",\n    size: 25,\n    style: {\n      marginTop: 5,\n      position: 'absolute',\n      right: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), React.createElement(CompletionView, {\n    text: '',\n    viewType: \"card\",\n    fontSize: CircleSize / 3.5,\n    textPos: imageHeight / 5,\n    printer: printer,\n    isCardView: true,\n    percent: percentFinished,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport { CardView };","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/CardView.js"],"names":["React","CompletionView","Entypo","lighter","useSelector","useDispatch","CardViewStyles","styles","windowWidth","Dimensions","get","width","windowHeight","height","CircleSize","imageHeight","StatusCodes","CardView","printer","images","state","imageDict","percentFinished","printerState","progress","Math","round","borderRadius","uri","id","require","image","backgroundColor","opacity","position","bottom","borderBottomLeftRadius","borderBottomRightRadius","flexDirection","alignItems","printerNameText","name","printerStatusText","status","marginTop","right"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Text, Button, StyleSheet, Image, ScrollView, Dimensions, ImageBackground } from 'react-native';\nimport { CompletionView } from './CompletionView.js';\nimport { Entypo } from '@expo/vector-icons';\nimport { lighter } from './Colors.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CardViewStyles as styles } from './Styles.js'\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst width = (windowWidth >= 700 ? (windowWidth / 3) : windowWidth)\n\nconst CircleSize = windowWidth / (windowWidth/(windowHeight/6))\n\nconst imageHeight = windowHeight / 4\n\nlet StatusCodes = {0: 'Offline', 1: 'Asleep', 2: 'Printing', 3: 'Paused'}\n\nfunction CardView({ printer })\n{\n  const images = useSelector(state => { return state.imageDict })\n  var percentFinished = 0;\n\n  //This is done to convert the number to a Int since it comes through as a float\n  if (printer.printerState != null)\n  {\n    if (printer.printerState.progress != null)\n    {\n      percentFinished = Math.round(printer.printerState.progress * 100)\n    }\n  }\n  \n  return(\n    <ImageBackground\n      imageStyle={{borderRadius:10}}\n      source= {{ uri: images[printer.id] }} // { src }\n      defaultSource = { require(\"./LocalAssets/default4.png\") }\n      loadingIndicatorSource={require('./LocalAssets/default4.png')}\n      style={styles.image}>\n      <View \n        style=\n        {{\n          width: width - 30,\n          height: 37,\n          backgroundColor: \"rgb(25, 40, 65)\",\n          opacity: .8,\n          position: 'absolute',\n          bottom: 0,\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: 10,\n          flexDirection: 'row',\n          alignItems: 'center'\n        }}\n      >\n        <Text style={styles.printerNameText}>\n          {printer.name}\n        </Text>\n        <Text style={styles.printerStatusText}>\n          Status: {StatusCodes[printer.status]}\n        </Text>\n        <Entypo name='chevron-right' color='#7CFC00' size={25} style={{ marginTop: 5, position: 'absolute', right: 0 }}/>\n      </View>\n      <CompletionView text={''} viewType='card' fontSize={CircleSize/3.5} textPos = {(imageHeight/5)} printer={printer} isCardView={true} percent={percentFinished} />\n    </ImageBackground>\n  )\n}\n\nexport { CardView };"]},"metadata":{},"sourceType":"module"}
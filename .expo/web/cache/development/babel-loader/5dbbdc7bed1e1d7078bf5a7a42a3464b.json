{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/CustomLogin.js\";\nimport Amplify, { Storage } from 'aws-amplify';\nimport config from \"./aws-exports\";\nimport { Auth } from 'aws-amplify';\nAmplify.configure(config);\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Ionicons as Icon } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { CustomLoginStyles as styles } from \"./Styles.js\";\nimport * as Linking from 'expo-linking';\nvar windowWidth = Dimensions.get('window').height;\nvar windowHeight = Dimensions.get('window').height;\n\nfunction signIn(username, password, handleError) {\n  var user;\n  return _regeneratorRuntime.async(function signIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(username != '' && password != '')) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(Auth.signIn(username, password));\n\n        case 4:\n          user = _context.sent;\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](1);\n          handleError();\n          console.log('error signing in', _context.t0);\n\n        case 11:\n          _context.next = 15;\n          break;\n\n        case 13:\n          handleError();\n          console.log('username or password is empty');\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 7]], Promise);\n}\n\nfunction GradientButton(_ref) {\n  var title = _ref.title,\n      width = _ref.width,\n      height = _ref.height,\n      fontSize = _ref.fontSize,\n      top = _ref.top,\n      onPress = _ref.onPress;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['rgb(44, 102, 98)', 'rgb(66, 138, 69)'],\n    style: {\n      width: width,\n      height: height,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 20,\n      marginTop: top\n    },\n    start: {\n      x: 1,\n      y: 0\n    },\n    end: {\n      x: 0,\n      y: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: fontSize\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, title)));\n}\n\nfunction IconTextInput(_ref2) {\n  var holder = _ref2.holder,\n      icon = _ref2.icon,\n      handleChange = _ref2.handleChange,\n      secure = _ref2.secure,\n      capitalize = _ref2.capitalize,\n      keyboardType = _ref2.keyboardType;\n  return React.createElement(View, {\n    style: styles.SectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, icon, React.createElement(TextInput, {\n    style: [styles.textInput, {\n      outline: 'none'\n    }],\n    onChangeText: function onChangeText(text) {\n      return handleChange(text);\n    },\n    placeholder: holder,\n    placeholderTextColor: \"gray\",\n    autoCapitalize: capitalize,\n    secureTextEntry: secure,\n    keyboardType: keyboardType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction CustomLogin() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      incorrectCredential = _useState8[0],\n      setIncorrect = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      startingUp = _useState10[0],\n      setStarting = _useState10[1];\n\n  var mounted = true;\n\n  function stopLoading() {\n    setIncorrect(100);\n    setLoading(false);\n  }\n\n  function stopStartup() {\n    if (mounted) {\n      setStarting(false);\n    }\n  }\n\n  useEffect(function () {\n    setTimeout(stopStartup, 2000);\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, startingUp && React.createElement(LinearGradient, {\n    colors: ['rgb(38, 85, 111)', 'rgb(72, 67, 118)'],\n    style: {\n      width: windowWidth,\n      height: windowHeight + 50,\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    start: {\n      x: 0,\n      y: 0\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: require(\"./LocalAssets/CogniprintLogo.png\"),\n    style: styles.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  })), !startingUp && React.createElement(LinearGradient, {\n    colors: ['rgb(38, 85, 111)', 'rgb(72, 67, 118)'],\n    style: {\n      width: windowWidth - 0.01,\n      height: windowHeight,\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    start: {\n      x: 0,\n      y: 0\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: require(\"./LocalAssets/CogniprintLogo.png\"),\n    style: styles.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }), React.createElement(IconTextInput, {\n    holder: 'Email',\n    icon: React.createElement(Icon, {\n      name: \"md-person\",\n      size: 20,\n      color: \"white\",\n      style: {\n        marginLeft: 40\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 59\n      }\n    }),\n    handleChange: setUser,\n    capitalize: 'none',\n    secure: false,\n    keyboardType: 'email-address',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }), React.createElement(IconTextInput, {\n    holder: 'Password',\n    icon: React.createElement(Entypo, {\n      name: \"lock\",\n      size: 20,\n      color: \"white\",\n      style: {\n        marginLeft: 40\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 62\n      }\n    }),\n    handleChange: setPassword,\n    capitalize: 'sentences',\n    secure: true,\n    keyboardType: 'default',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }), !loading && React.createElement(GradientButton, {\n    title: \"Login\",\n    width: 150,\n    height: 50,\n    fontSize: 20,\n    top: 40,\n    onPress: function onPress() {\n      setLoading(true);\n      signIn(username, password, stopLoading);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }), loading && React.createElement(ActivityIndicator, {\n    color: 'white',\n    size: 50,\n    marginTop: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: 'red',\n      marginTop: 15,\n      opacity: incorrectCredential\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"Incorrect email or password\"), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 15,\n      marginTop: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"Don't have an account?\"), React.createElement(GradientButton, {\n    title: \"Sign Up\",\n    width: 110,\n    height: 45,\n    fontSize: 15,\n    top: 20,\n    onPress: function onPress() {\n      return Linking.openURL('https://cogniprint-auth-cogniprint.auth.eu-west-1.amazoncognito.com/signup?client_id=5cmai5cauck3t88c6rrei6bvq2&response_type=code&scope=aws.cognito.signin.user.admin+email+openid+phone+profile&redirect_uri=http://localhost/');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport { CustomLogin };","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/CustomLogin.js"],"names":["Amplify","Storage","config","Auth","configure","React","useEffect","useState","LinearGradient","Ionicons","Icon","Entypo","TouchableOpacity","CustomLoginStyles","styles","Linking","windowWidth","Dimensions","get","height","windowHeight","signIn","username","password","handleError","user","console","log","GradientButton","title","width","fontSize","top","onPress","flexDirection","alignItems","justifyContent","borderRadius","marginTop","x","y","color","IconTextInput","holder","icon","handleChange","secure","capitalize","keyboardType","SectionStyle","textInput","outline","text","CustomLogin","setUser","setPassword","loading","setLoading","incorrectCredential","setIncorrect","startingUp","setStarting","mounted","stopLoading","stopStartup","setTimeout","require","logo","marginLeft","opacity","openURL"],"mappings":"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","sourcesContent":["import Amplify, { Storage } from 'aws-amplify'\nimport config from './aws-exports'\nimport { Auth } from 'aws-amplify';\nAmplify.configure(config)\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react'\nimport { View, StyleSheet, Dimensions, Text, Image, TextInput, ActivityIndicator } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient'\nimport { Ionicons as Icon} from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { CustomLoginStyles as styles } from './Styles.js'\nimport * as Linking from 'expo-linking';\n\nconst windowWidth = Dimensions.get('window').height;\nconst windowHeight = Dimensions.get('window').height;\n\n//Checks credentials and signs user in\nasync function signIn(username, password, handleError) \n{\n    if (username != '' && password != '')\n    {\n        try \n        {\n            const user = await Auth.signIn(username, password);\n        } catch (error) {\n            handleError()\n            console.log('error signing in', error);\n        }\n    }else \n    {\n        handleError()\n        console.log('username or password is empty')\n    }\n}\n\n//Shows a gradient button\nfunction GradientButton({title, width, height, fontSize, top, onPress})\n{\n    return(\n        <TouchableOpacity onPress={onPress}>\n            <LinearGradient\n                colors={['rgb(44, 102, 98)', 'rgb(66, 138, 69)']}\n                style={{\n                    width: width,\n                    height: height,\n                    flexDirection: 'row', \n                    alignItems: 'center', \n                    justifyContent: 'center',\n                    borderRadius: 20,\n                    marginTop: top\n                }}\n                start={{ x: 1, y: 0 }}\n                end={{ x: 0, y: 0 }}\n            >\n                <Text style={{ color: 'white', fontSize: fontSize }} >{title}</Text>\n            </LinearGradient>\n        </TouchableOpacity>\n    )\n}\n\n//Shows a text input\nfunction IconTextInput({ holder, icon, handleChange, secure, capitalize, keyboardType })\n{\n    return(\n        <View style={ styles.SectionStyle }>\n            \n            {icon}\n            <TextInput\n                style={[ styles.textInput, { outline: 'none' } ]}\n                onChangeText={text => handleChange(text)}\n                placeholder={holder}\n                placeholderTextColor='gray'\n                autoCapitalize={capitalize}\n                secureTextEntry={secure}\n                keyboardType={keyboardType}\n            />\n        </View>\n    )\n}\n\nfunction CustomLogin()\n{\n    const [username, setUser] = useState('')\n    const [password, setPassword] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [incorrectCredential, setIncorrect] = useState(0)\n    const [startingUp, setStarting] = useState(true)\n\n    let mounted = true\n\n    function stopLoading()\n    {\n        setIncorrect(100)\n        setLoading(false)\n    }\n\n    function stopStartup()\n    {\n        if (mounted)\n        {\n            setStarting(false)\n        }\n    }\n\n    useEffect(() => \n    {\n        setTimeout(stopStartup, 2000)\n        return () => mounted = false;\n    }, [])\n\n    return(\n        <React.Fragment>\n            {(startingUp) &&\n                <LinearGradient\n                    colors={['rgb(38, 85, 111)', 'rgb(72, 67, 118)']}\n                    style={{\n                        width: windowWidth,\n                        height: windowHeight + 50,\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                    }}\n                    start={{ x: 0, y: 0 }}\n                    end={{ x: 0, y: 1 }}\n                >\n                    <Image source={require('./LocalAssets/CogniprintLogo.png')} style={styles.logo} />\n                </LinearGradient>\n            }\n            {(!startingUp) &&\n                <LinearGradient\n                    colors={['rgb(38, 85, 111)', 'rgb(72, 67, 118)']}\n                    style={{\n                        width: windowWidth - 0.01,\n                        height: windowHeight,\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                    }}\n                    start={{ x: 0, y: 0 }}\n                    end={{ x: 0, y: 1 }}\n                >\n                    <Image source={require('./LocalAssets/CogniprintLogo.png')} style={styles.logo} />\n                    <IconTextInput holder={'Email'} icon={<Icon name='md-person' size={20} color='white' style={{ marginLeft: 40 }} />} handleChange={setUser} capitalize={'none'} secure={false} keyboardType={'email-address'} />\n                    <IconTextInput holder={'Password'} icon={<Entypo name='lock' size={20} color='white' style={{ marginLeft: 40 }} />} handleChange={setPassword} capitalize={'sentences'} secure={true} keyboardType={'default'} />\n                    {(!loading) &&\n                        <GradientButton title='Login' width={150} height={50} fontSize={20} top={40} onPress={() => { setLoading(true); signIn(username, password, stopLoading)}} />\n                    }\n                    {(loading) &&\n                        <ActivityIndicator color={'white'} size={50} marginTop={40}/>\n                    }\n                    <Text style={{ fontSize: 15, color: 'red', marginTop: 15, opacity: incorrectCredential }}>Incorrect email or password</Text> \n                    <Text style={{ color: 'white', fontSize: 15, marginTop: 100 }} >Don't have an account?</Text>\n                    <GradientButton title='Sign Up' width={110} height={45} fontSize={15} top={20} onPress={ () => (Linking.openURL('https://cogniprint-auth-cogniprint.auth.eu-west-1.amazoncognito.com/signup?client_id=5cmai5cauck3t88c6rrei6bvq2&response_type=code&scope=aws.cognito.signin.user.admin+email+openid+phone+profile&redirect_uri=http://localhost/')) } />\n                </LinearGradient>\n            }\n        </React.Fragment>\n    )\n}\n\nexport { CustomLogin };"]},"metadata":{},"sourceType":"module"}
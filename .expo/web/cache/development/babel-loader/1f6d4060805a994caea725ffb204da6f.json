{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/OverlayView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { useEffect, useState, useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { PauseOrCancelView } from \"./PauseOrCancelView\";\nimport { listPrints, listPrinters } from \"./graphql/queries\";\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons as Icon } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  printingViewText: {\n    fontWeight: '100',\n    fontSize: 20,\n    color: 'rgb(255, 255, 255)',\n    position: 'absolute',\n    bottom: 0,\n    marginBottom: windowHeight / 11\n  },\n  iconStyle: {\n    fontWeight: 'bold',\n    color: 'white',\n    flex: 1,\n    shadowColor: 'black',\n    shadowRadius: 5,\n    shadowOpacity: 0.5\n  }\n});\nvar StatusCodes = {\n  0: 'Offline',\n  1: 'Asleep',\n  2: 'Printing',\n  3: 'Paused'\n};\n\nfunction OverlayView(props) {\n  var printerProgress = props.printer.printerState != null ? props.printer.printerState.progress != null ? props.printer.printerState.progress : 0 : 0;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPauseOrCancelView = _useState2[0],\n      setShowPause = _useState2[1];\n\n  function toggleShowPause() {\n    if (showPauseOrCancelView == 1) {\n      setShowPause(0);\n    } else if (showPauseOrCancelView == 0) {\n      setShowPause(1);\n    }\n  }\n\n  var marginStyle = {\n    marginTop: (!props.isCardView ? windowHeight / 8.9 : windowHeight / 4 / 4) - 10\n  };\n  var moonStyle = {\n    marginTop: (!props.isCardView ? windowHeight / 8.9 : windowHeight / 4 / 4) - 20\n  };\n  var test = {\n    0: React.createElement(Feather, {\n      name: \"wifi-off\",\n      size: props.fontSize + 10,\n      size: props.fontSize + 10,\n      color: \"white\",\n      style: _objectSpread(_objectSpread({}, styles.iconStyle), marginStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 8\n      }\n    }),\n    1: React.createElement(Icon, {\n      name: \"ios-moon\",\n      size: props.fontSize + 20,\n      color: \"white\",\n      style: _objectSpread(_objectSpread({}, styles.iconStyle), moonStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 8\n      }\n    }),\n    3: React.createElement(Icon, {\n      name: \"ios-pause\",\n      size: props.fontSize + 10,\n      color: \"white\",\n      style: _objectSpread(_objectSpread({}, styles.iconStyle), marginStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }\n    })\n  };\n  var AsleepOrOffline = props.printer.status == 1 || props.printer.status == 0 ? true : false;\n  var isDisplayingIcon = props.printer.status == 1 || props.printer.status == 0 || props.printer.status == 3 ? true : false;\n  return React.createElement(React.Fragment, null, showPauseOrCancelView == 0 && React.createElement(React.Fragment, null, props.printer.status == 2 && React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: props.fontSize,\n      color: 'white',\n      marginTop: (!props.isCardView ? windowHeight / 8.9 : windowHeight / 4 / 4) - 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, printerProgress, \"%\"), React.createElement(Text, {\n    style: styles.printingViewText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, props.compeletedText)), isDisplayingIcon && test[props.printer.status]), showPauseOrCancelView == 1 && React.createElement(PauseOrCancelView, {\n    printer: props.printer,\n    toggleShowPause: toggleShowPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), !props.isCardView && !AsleepOrOffline && React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleShowPause();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(Entypo, {\n    name: \"chevron-down\",\n    size: 32,\n    color: \"#7CFC00\",\n    style: styles.ControlsButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport { OverlayView };","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/OverlayView.js"],"names":["React","useEffect","useState","useReducer","PauseOrCancelView","listPrints","listPrinters","Feather","Ionicons","Icon","Entypo","TouchableOpacity","windowWidth","Dimensions","get","width","windowHeight","height","styles","StyleSheet","create","printingViewText","fontWeight","fontSize","color","position","bottom","marginBottom","iconStyle","flex","shadowColor","shadowRadius","shadowOpacity","StatusCodes","OverlayView","props","printerProgress","printer","printerState","progress","showPauseOrCancelView","setShowPause","toggleShowPause","marginStyle","marginTop","isCardView","moonStyle","test","AsleepOrOffline","status","isDisplayingIcon","compeletedText","ControlsButton"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, useState, useReducer } from 'react'\nimport { View, Text, Button, StyleSheet, Image, ScrollView, Dimensions, ImageBackground } from 'react-native';\nimport { PauseOrCancelView } from './PauseOrCancelView';\nimport { listPrints, listPrinters } from './graphql/queries';\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons as Icon } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst styles = StyleSheet.create({\n    printingViewText:\n    {\n      fontWeight: '100',\n      fontSize: 20,\n      color: 'rgb(255, 255, 255)',\n      position: 'absolute',\n      bottom: 0,\n      marginBottom: windowHeight / 11\n    },\n    iconStyle:\n    {\n      fontWeight: 'bold', \n      color: 'white',\n      flex: 1, \n      shadowColor: 'black', \n      shadowRadius: 5, \n      shadowOpacity: 0.5\n    }\n})\n\nlet StatusCodes = {0: 'Offline', 1: 'Asleep', 2: 'Printing', 3: 'Paused'}\n\nfunction OverlayView(props)\n{\n  var printerProgress = (props.printer.printerState != null ? (props.printer.printerState.progress != null ? props.printer.printerState.progress : 0) : 0)\n  const [showPauseOrCancelView, setShowPause] = useState(0)\n\n  function toggleShowPause()\n  {\n    if (showPauseOrCancelView == 1)\n    {\n      setShowPause(0)\n    }else if (showPauseOrCancelView == 0)\n    {\n      setShowPause(1)\n    }\n  }\n  \n  const marginStyle = {\n    marginTop: (!props.isCardView ? windowHeight/8.9 : ((windowHeight/4)/4)) - 10, \n  }\n\n  const moonStyle = {\n    marginTop: (!props.isCardView ? windowHeight/8.9 : ((windowHeight/4)/4)) - 20, \n  }\n\n  let test = {\n    0: <Feather name='wifi-off' size={props.fontSize + 10} size={props.fontSize + 10} color='white' style={{ ...styles.iconStyle, ...marginStyle }}/>,\n    1: <Icon name='ios-moon' size={props.fontSize + 20} color='white' style={{ ...styles.iconStyle, ...moonStyle }}/>,\n    3: <Icon name='ios-pause' size={props.fontSize + 10} color='white' style={{ ...styles.iconStyle, ...marginStyle }}/>\n  }\n  //0 - show icon display (first one that appears)\n  //1 - show pause or cancel view\n  //2 - confirm cancellation\n  \n  var AsleepOrOffline = ((props.printer.status == 1 || props.printer.status == 0) ? true : false)\n  var isDisplayingIcon = ((props.printer.status == 1 || props.printer.status == 0 || props.printer.status == 3) ? true : false)\n\n  return(\n    <>\n      {(showPauseOrCancelView == 0) &&\n        <>\n          {(props.printer.status == 2) &&\n            <>\n              <Text \n                style=\n                {{\n                  fontWeight: 'bold',\n                  fontSize: props.fontSize,\n                  color: 'white',\n                  marginTop: (!props.isCardView ? windowHeight/8.9 : ((windowHeight/4)/4)) - 5\n                }}>\n                {printerProgress}%\n              </Text>\n              <Text style= { styles.printingViewText }>{props.compeletedText}</Text>\n            </>\n          }\n          {(isDisplayingIcon) &&\n            test[props.printer.status]\n          }\n        </>\n      }\n      {(showPauseOrCancelView == 1) &&\n        <PauseOrCancelView printer={props.printer} toggleShowPause={toggleShowPause}/>\n      }\n      {(!props.isCardView && !AsleepOrOffline) &&\n        <TouchableOpacity onPress={() => toggleShowPause()}>\n          <Entypo name='chevron-down' size={32} color='#7CFC00' style={styles.ControlsButton}/>\n        </TouchableOpacity>\n      }\n    </>\n  )\n}\n\nexport {OverlayView};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nvar _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/PauseOrCancelView.js\";\nimport * as React from 'react';\nimport { useEffect, useState, useReducer } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updatePrinter } from \"./updatePrinters.js\";\nimport { Divider } from \"./Divider.js\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FontAwesome5 as FA } from '@expo/vector-icons';\nimport ActionSheet from \"./ActionSheet.js\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar CircleDiameter = windowWidth / 1.5;\nvar toggleControlCodes = {\n  2: 3,\n  3: 2\n};\n\nvar ButtonInfo = function ButtonInfo(title, icon) {\n  _classCallCheck(this, ButtonInfo);\n\n  this.buttonTitle = title;\n  this.buttonIcon = icon;\n};\n\nvar infoDict = {\n  2: new ButtonInfo('Play', 'play'),\n  3: new ButtonInfo('Pause', 'pause')\n};\n\nfunction PauseOrCancelView(printer) {\n  var actionItems = [{\n    id: 1,\n    label: React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        marginTop: 10,\n        marginBottom: 10,\n        marginLeft: 10,\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }\n    }, \"Confirm Cancel\"),\n    onPress: function onPress() {\n      updateStatus(1);\n    }\n  }];\n  var temp;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showConfirmCancel = _useState2[0],\n      setConfirmCancel = _useState2[1];\n\n  function findPrinter() {\n    var returnValue;\n\n    for (i = 0; i < temp.length; i++) {\n      if (temp[i].id == printer.printer.id) {\n        returnValue = i;\n        break;\n      }\n    }\n\n    return returnValue;\n  }\n\n  function updateStatus(newStatus) {\n    var i = findPrinter();\n    temp[i].status = newStatus;\n    dispatch(updatePrinter(temp));\n    printer.toggleShowPause();\n  }\n\n  function closeActionSheet() {\n    setConfirmCancel(false);\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      alignContent: 'leading',\n      justifyContent: 'leading',\n      marginBottom: 15,\n      marginLeft: windowWidth / 7\n    },\n    onPress: function onPress() {\n      return updateStatus(toggleControlCodes[printer.printer.status]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(FA, {\n    name: infoDict[printer.printer.status].buttonIcon,\n    color: \"white\",\n    size: 35,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 25,\n      marginLeft: 10,\n      marginTop: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, infoDict[printer.printer.status].buttonTitle)), React.createElement(Divider, {\n    width: CircleDiameter - 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      alignContent: 'leading',\n      justifyContent: 'leading',\n      marginTop: 15,\n      marginLeft: windowWidth / 7\n    },\n    onPress: function onPress() {\n      return setConfirmCancel(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(FA, {\n    name: \"stop\",\n    color: \"red\",\n    size: 35,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'red',\n      fontSize: 25,\n      marginLeft: 10,\n      marginTop: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Cancel\")), React.createElement(Modal, {\n    visible: showConfirmCancel,\n    animationType: \"slide\",\n    transparent: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, React.createElement(ActionSheet, {\n    actionItems: actionItems,\n    onCancel: closeActionSheet,\n    title: \"CONFIRM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport { PauseOrCancelView };","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/PauseOrCancelView.js"],"names":["React","useEffect","useState","useReducer","useSelector","useDispatch","updatePrinter","Divider","TouchableOpacity","FontAwesome5","FA","ActionSheet","windowWidth","Dimensions","get","width","windowHeight","height","CircleDiameter","toggleControlCodes","ButtonInfo","title","icon","buttonTitle","buttonIcon","infoDict","PauseOrCancelView","printer","actionItems","id","label","fontSize","marginTop","marginBottom","marginLeft","color","onPress","updateStatus","temp","dispatch","showConfirmCancel","setConfirmCancel","findPrinter","returnValue","i","length","newStatus","status","toggleShowPause","closeActionSheet","flexDirection","alignContent","justifyContent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, useState, useReducer } from 'react'\nimport { Text, Dimensions, Modal } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updatePrinter } from './updatePrinters.js';\nimport { Divider } from './Divider.js';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FontAwesome5 as FA } from '@expo/vector-icons';\nimport ActionSheet from './ActionSheet.js';\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst CircleDiameter = (windowWidth / 1.5)\n\nlet toggleControlCodes = { 2: 3, 3: 2 }\n\nclass ButtonInfo\n{\n  constructor(title, icon)\n  {\n    this.buttonTitle = title;\n    this.buttonIcon = icon;\n  }\n}\n\nvar infoDict = { 2: new ButtonInfo('Play', 'play'), 3: new ButtonInfo('Pause', 'pause') }\n\nfunction PauseOrCancelView(printer)\n{\n  //Action Items to present on the confirm cancel modal\n  const actionItems = [\n    {\n      id: 1,\n      label: <Text style={{ fontSize: 15, marginTop: 10, marginBottom: 10, marginLeft: 10, color: 'red' }}>Confirm Cancel</Text>,\n      onPress: () => {\n        updateStatus(1)\n      }\n    },\n  ];\n\n  var temp;\n  const dispatch = useDispatch()\n\n  const [showConfirmCancel, setConfirmCancel] = useState(false)\n\n  //Returns the index of the printer that was passed in\n  function findPrinter()\n  {\n    var returnValue;\n    \n    for (i = 0; i < temp.length; i++)\n    {\n      if (temp[i].id == printer.printer.id)\n      {\n        returnValue = i\n        break\n      }\n    }\n    return returnValue\n  }\n\n  //Updates the printer status to either pause or play \n  function updateStatus(newStatus)\n  {\n    let i = findPrinter()\n\n    temp[i].status = newStatus\n\n    dispatch(updatePrinter(temp))\n    printer.toggleShowPause()\n  }\n\n  function closeActionSheet()\n  {\n    setConfirmCancel(false)\n  }\n\n  //Cancel button should go to the confirm cancel view, action for cancel button //updateStatus(1)\n  return(\n    <React.Fragment>\n      <TouchableOpacity style={{ flexDirection: 'row', alignContent: 'leading', justifyContent: 'leading', marginBottom: 15, marginLeft: windowWidth / 7 }} onPress={() => updateStatus(toggleControlCodes[printer.printer.status])}>\n        <FA name={infoDict[printer.printer.status].buttonIcon} color='white' size={35}/>\n        <Text style={{ color: 'white', fontSize: 25, marginLeft: 10, marginTop: 5 }}>{infoDict[printer.printer.status].buttonTitle}</Text>\n      </TouchableOpacity>\n\n      <Divider width={CircleDiameter - 20}/>\n\n      <TouchableOpacity style={{ flexDirection: 'row', alignContent: 'leading', justifyContent: 'leading', marginTop: 15, marginLeft: windowWidth / 7  }} onPress={() => setConfirmCancel(true)}>\n        <FA name='stop' color='red' size={35}/>\n        <Text style={{ color: 'red', fontSize: 25, marginLeft: 10, marginTop: 5 }}>Cancel</Text>\n      </TouchableOpacity>\n      <Modal\n        visible={showConfirmCancel}\n        animationType='slide'\n        transparent={true}\n      >\n        <ActionSheet\n          actionItems={actionItems}\n          onCancel={closeActionSheet}\n          title='CONFIRM'\n        />\n      </Modal>\n    </React.Fragment>\n  )\n}\n\nexport {PauseOrCancelView};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/CardView.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { CompletionView } from \"./CompletionView.js\";\nimport { Entypo } from '@expo/vector-icons';\nimport { lighter } from \"./Colors.js\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar CircleSize = windowWidth / (windowWidth / (windowHeight / 6));\nvar imageHeight = windowHeight / 4;\nvar styles = StyleSheet.create({\n  image: {\n    width: windowWidth - 30,\n    height: imageHeight,\n    paddingTop: '2%',\n    paddingBottom: '2%',\n    marginTop: 25,\n    shadowColor: 'transparent',\n    borderRadius: 10\n  },\n  printerNameText: {\n    fontSize: 20,\n    textAlign: 'center',\n    color: 'white',\n    marginLeft: 10,\n    marginBottom: 7,\n    marginTop: 5\n  },\n  printerStatusText: {\n    fontSize: 15,\n    textAlign: 'center',\n    color: 'white',\n    marginBottom: 10,\n    marginTop: 10,\n    marginRight: 25,\n    position: 'absolute',\n    right: 0\n  },\n  cardCompletionViewStyle: {\n    borderRadius: Math.round(windowWidth + windowHeight) / 2,\n    width: CircleSize,\n    height: CircleSize,\n    borderColor: 'rgba(255, 255, 255, .3)',\n    borderWidth: 7,\n    alignItems: 'center',\n    position: 'absolute',\n    right: 0,\n    marginRight: 10,\n    marginTop: windowHeight / 60,\n    shadowColor: 'black',\n    shadowOpacity: 0.5,\n    shadowRadius: 3\n  }\n});\nvar StatusCodes = {\n  0: 'Offline',\n  1: 'Asleep',\n  2: 'Printing',\n  3: 'Paused'\n};\n\nfunction CardView(_ref) {\n  var printer = _ref.printer,\n      images = _ref.images;\n  return React.createElement(ImageBackground, {\n    imageStyle: {\n      borderRadius: 10\n    },\n    source: {\n      uri: images[printer.id]\n    },\n    defaultSource: require(\"./LocalAssets/default4.png\"),\n    loadingIndicatorSource: require(\"./LocalAssets/default4.png\"),\n    style: styles.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: windowWidth - 30,\n      height: 37,\n      backgroundColor: \"rgb(25, 40, 65)\",\n      opacity: .8,\n      position: 'absolute',\n      bottom: 0,\n      borderBottomLeftRadius: 10,\n      borderBottomRightRadius: 10,\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.printerNameText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, printer.name), React.createElement(Text, {\n    style: styles.printerStatusText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Status: \", StatusCodes[printer.status]), React.createElement(Entypo, {\n    name: \"chevron-right\",\n    color: \"#7CFC00\",\n    size: 25,\n    style: {\n      marginTop: 5,\n      position: 'absolute',\n      right: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })), React.createElement(CompletionView, {\n    text: '',\n    style: styles.cardCompletionViewStyle,\n    fontSize: CircleSize / 3.5,\n    textPos: imageHeight / 5,\n    printer: printer,\n    isCardView: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport { CardView };","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/CardView.js"],"names":["React","CompletionView","Entypo","lighter","windowWidth","Dimensions","get","width","windowHeight","height","CircleSize","imageHeight","styles","StyleSheet","create","image","paddingTop","paddingBottom","marginTop","shadowColor","borderRadius","printerNameText","fontSize","textAlign","color","marginLeft","marginBottom","printerStatusText","marginRight","position","right","cardCompletionViewStyle","Math","round","borderColor","borderWidth","alignItems","shadowOpacity","shadowRadius","StatusCodes","CardView","printer","images","uri","id","require","backgroundColor","opacity","bottom","borderBottomLeftRadius","borderBottomRightRadius","flexDirection","name","status"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Text, Button, StyleSheet, Image, ScrollView, Dimensions, ImageBackground } from 'react-native';\nimport { CompletionView } from './CompletionView.js';\nimport { Entypo } from '@expo/vector-icons';\nimport { lighter } from './Colors.js';\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst CircleSize = windowWidth / (windowWidth/(windowHeight/6))\n\nconst imageHeight = windowHeight / 4\n\nconst styles = StyleSheet.create({\n  image: \n  {\n    width: windowWidth - 30,\n    height: imageHeight,\n    paddingTop: '2%',\n    paddingBottom: '2%',\n    marginTop: 25,\n    shadowColor: 'transparent',\n    borderRadius:10\n  },\n  printerNameText: \n  {\n    fontSize: 20,\n    textAlign: 'center',\n    color: 'white',\n    marginLeft: 10,\n    marginBottom: 7,\n    marginTop: 5\n  },\n  printerStatusText: \n  {\n    fontSize: 15,\n    textAlign: 'center',\n    color: 'white',\n    marginBottom: 10,\n    marginTop: 10,\n    marginRight: 25,\n    position: 'absolute',\n    right: 0\n  },\n  cardCompletionViewStyle:\n  {\n    borderRadius: Math.round(windowWidth + windowHeight) / 2,\n    width: CircleSize,\n    height: CircleSize,\n    borderColor: 'rgba(255, 255, 255, .3)', \n    borderWidth: 7,\n    alignItems: 'center',\n    position: 'absolute',\n    right: 0,\n    marginRight: 10,\n    marginTop: (windowHeight/60),\n    shadowColor: 'black',\n    shadowOpacity: 0.5,\n    shadowRadius: 3\n  },\n})\n\nlet StatusCodes = {0: 'Offline', 1: 'Asleep', 2: 'Printing', 3: 'Paused'}\n\nfunction CardView({ printer, images })\n{\n  //console.log(\"getting passed into CardView \",  image)\n  /*\n  var src;\n  if (images[printer.id] == false || typeof(images[printer.id]) != \"string\"){\n    src = require('./LocalAssets/default4.png')\n    console.log('src is normal stored image')\n  } else {\n    src = { uri: images[printer.id] }\n    console.log('src is from image ', images[printer.id])\n  }\n  */\n\n  return(\n    <ImageBackground\n      imageStyle={{borderRadius:10}}\n      source= {{ uri: images[printer.id] }} // { src }\n      defaultSource = { require(\"./LocalAssets/default4.png\") }\n      loadingIndicatorSource={require('./LocalAssets/default4.png')}\n      style={styles.image}>\n      <View \n        style=\n        {{\n          width: windowWidth - 30,\n          height: 37,\n          backgroundColor: \"rgb(25, 40, 65)\",\n          opacity: .8,\n          position: 'absolute',\n          bottom: 0,\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: 10,\n          flexDirection: 'row',\n        }}\n      >\n        <Text style={styles.printerNameText}>\n          {printer.name}\n        </Text>\n        <Text style={styles.printerStatusText}>\n          Status: {StatusCodes[printer.status]}\n        </Text>\n        <Entypo name='chevron-right' color='#7CFC00' size={25} style={{ marginTop: 5, position: 'absolute', right: 0 }}/>\n      </View>\n      <CompletionView text={''} style={styles.cardCompletionViewStyle} fontSize={CircleSize/3.5} textPos = {(imageHeight/5)} printer={printer} isCardView={true} />\n    </ImageBackground>\n  )\n}\n\nexport { CardView };"]},"metadata":{},"sourceType":"module"}
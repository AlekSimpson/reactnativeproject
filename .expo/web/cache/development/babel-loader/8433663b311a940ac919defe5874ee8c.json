{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/SegmentedControl.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Divider } from \"./Divider.js\";\nimport { AppStyles as styles } from \"./Styles.js\";\n\nfunction SegmentedControl(props) {\n  var sortItems = props.sortItems;\n  var background = props.background;\n\n  var sortSheetItems = _toConsumableArray(sortItems);\n\n  return React.createElement(View, {\n    style: background,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, sortSheetItems.map(function (sortItem, index) {\n    return React.createElement(TouchableOpacity, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      onPress: sortItem.onPress,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: sortItem.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }\n    }, sortItem.icon, sortItem.label));\n  }));\n}\n\nSegmentedControl.propTypes = {\n  sortItems: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    icon: PropTypes.any,\n    label: PropTypes.any,\n    onPress: PropTypes.func,\n    style: PropTypes.string\n  })).isRequired\n};\nSegmentedControl.defaultProps = {\n  sortItems: []\n};\nexport { SegmentedControl };","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/SegmentedControl.js"],"names":["PropTypes","React","TouchableOpacity","Divider","AppStyles","styles","SegmentedControl","props","sortItems","background","sortSheetItems","map","sortItem","index","flexDirection","alignItems","justifyContent","onPress","style","icon","label","propTypes","arrayOf","shape","id","oneOfType","number","string","any","func","isRequired","defaultProps"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,OAAT;AACA,SAASC,SAAS,IAAIC,MAAtB;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EACA;AAAA,MACYC,SADZ,GAC0BD,KAD1B,CACYC,SADZ;AAAA,MAGYC,UAHZ,GAG2BF,KAH3B,CAGYE,UAHZ;;AAKI,MAAMC,cAAc,sBAAOF,SAAP,CAApB;;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,cAAc,CAACC,GAAf,CAAmB,UAACC,QAAD,EAAWC,KAAX,EACnB;AACI,WACI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE,KAAjB;AAAwBC,QAAAA,UAAU,EAAE,QAApC;AAA8CC,QAAAA,cAAc,EAAE;AAA9D,OAAzB;AAAmG,MAAA,OAAO,EAAEJ,QAAQ,CAACK,OAArH;AAA8H,MAAA,GAAG,EAAEJ,KAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAGD,QAAQ,CAACM,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,QAAQ,CAACO,IADd,EAEKP,QAAQ,CAACQ,KAFd,CADJ,CADJ;AAQH,GAVD,CAFR,CADJ;AAiBH;;AAEDd,gBAAgB,CAACe,SAAjB,GAA6B;AACzBb,EAAAA,SAAS,EAAER,SAAS,CAACsB,OAAV,CACPtB,SAAS,CAACuB,KAAV,CAAgB;AACZC,IAAAA,EAAE,EAAExB,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAAC0B,MAAX,EAAmB1B,SAAS,CAAC2B,MAA7B,CAApB,CADQ;AAEZR,IAAAA,IAAI,EAAEnB,SAAS,CAAC4B,GAFJ;AAGZR,IAAAA,KAAK,EAAEpB,SAAS,CAAC4B,GAHL;AAIZX,IAAAA,OAAO,EAAEjB,SAAS,CAAC6B,IAJP;AAKZX,IAAAA,KAAK,EAAElB,SAAS,CAAC2B;AALL,GAAhB,CADO,EAQTG;AATuB,CAA7B;AAaAxB,gBAAgB,CAACyB,YAAjB,GAAgC;AAC5BvB,EAAAA,SAAS,EAAE;AADiB,CAAhC;AAIA,SAASF,gBAAT","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, Text, TouchableHighlight, View, Dimensions } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Divider } from './Divider.js';\nimport { AppStyles as styles } from './Styles.js'\n\nfunction SegmentedControl(props)\n{\n    const { sortItems } = props;\n\n    const { background } = props;\n\n    const sortSheetItems = [...sortItems]\n\n    return(\n        <View style={ background }>\n            {\n                sortSheetItems.map((sortItem, index) => \n                {\n                    return(\n                        <TouchableOpacity style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }} onPress={sortItem.onPress} key={index}>\n                            <View style={ sortItem.style }>\n                                {sortItem.icon}\n                                {sortItem.label}\n                            </View>\n                        </TouchableOpacity>\n                    )\n                })\n            }\n        </View>\n    )\n}\n\nSegmentedControl.propTypes = {\n    sortItems: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n            icon: PropTypes.any,\n            label: PropTypes.any,\n            onPress: PropTypes.func,\n            style: PropTypes.string\n        })\n    ).isRequired,\n}\n\n\nSegmentedControl.defaultProps = {\n    sortItems: [],\n}\n\nexport { SegmentedControl };"]},"metadata":{},"sourceType":"module"}
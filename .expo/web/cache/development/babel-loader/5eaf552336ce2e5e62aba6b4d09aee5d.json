{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/ActionSheet.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nvar PRIMARY_COLOR = 'rgb(0,98,255)';\nvar WHITE = '#ffffff';\nvar BORDER_COLOR = '#DBDBDB';\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\n\nvar ActionSheet = function ActionSheet(props) {\n  var actionItems = props.actionItems;\n  var actionSheetItems = [].concat(_toConsumableArray(actionItems), [{\n    id: '#cancel',\n    label: 'Cancel',\n    onPress: props == null ? void 0 : props.onCancel\n  }]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, actionSheetItems.map(function (actionItem, index) {\n    React.createElement(TouchableOpacity, {\n      onPress: actionItem.onPress,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }, \"big epic gamer test\"));\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"rgb(28, 46, 74)\",\n    borderRadius: 10,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    width: windowWidth - 20,\n    height: windowHeight / 4,\n    position: 'absolute',\n    bottom: 0\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nActionSheet.propTypes = {\n  actionItems: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    label: PropTypes.string,\n    onPress: PropTypes.func\n  })).isRequired,\n  onCancel: PropTypes.func,\n  actionTextColor: PropTypes.string\n};\nActionSheet.defaultProps = {\n  actionItems: [],\n  onCancel: function onCancel() {},\n  actionTextColor: null\n};\nexport default ActionSheet;","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/ActionSheet.js"],"names":["PropTypes","React","TouchableOpacity","PRIMARY_COLOR","WHITE","BORDER_COLOR","windowWidth","Dimensions","get","width","windowHeight","height","ActionSheet","props","actionItems","actionSheetItems","id","label","onPress","onCancel","styles","centeredView","modalView","map","actionItem","index","color","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","position","bottom","openButton","padding","elevation","textStyle","fontWeight","textAlign","modalText","marginBottom","propTypes","arrayOf","shape","oneOfType","number","string","func","isRequired","actionTextColor","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, Text, TouchableHighlight, View, Dimensions } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nconst PRIMARY_COLOR = 'rgb(0,98,255)';\nconst WHITE = '#ffffff';\nconst BORDER_COLOR = '#DBDBDB';\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst ActionSheet = (props) => {\n  const { actionItems } = props;\n  const actionSheetItems = [\n    ...actionItems,\n    {\n      id: '#cancel',\n      label: 'Cancel',\n      onPress: props?.onCancel\n    }\n  ]\n  return (\n    <React.Fragment>\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            {\n              actionSheetItems.map((actionItem, index) => {\n                <TouchableOpacity onPress={actionItem.onPress} key={index}>\n                  <Text style={{ color: 'red' }}>big epic gamer test</Text>\n                </TouchableOpacity>\n              })\n            }\n          </View>\n        </View>\n    </React.Fragment>\n  )\n}\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"rgb(28, 46, 74)\",\n    borderRadius: 10,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    width: windowWidth - 20,\n    height: windowHeight / 4,\n    position: 'absolute',\n    bottom: 0\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\n\nActionSheet.propTypes = {\n  actionItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      label: PropTypes.string,\n      onPress: PropTypes.func\n    })\n  ).isRequired,\n  onCancel: PropTypes.func,\n  actionTextColor: PropTypes.string\n}\n\n\nActionSheet.defaultProps = {\n  actionItems: [],\n  onCancel: () => { },\n  actionTextColor: null\n}\n\n\nexport default ActionSheet;"]},"metadata":{},"sourceType":"module"}
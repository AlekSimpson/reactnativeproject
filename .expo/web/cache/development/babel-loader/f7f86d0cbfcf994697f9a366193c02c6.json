{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/EditPrinterView.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Divider } from \"./Divider.js\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { updatePrinter } from \"./updatePrinters.js\";\nimport { useEffect, useState, useReducer } from 'react';\nimport ActionSheet from \"./ActionSheet.js\";\nimport { Ionicons as Icon } from '@expo/vector-icons';\nimport { MaterialCommunityIcons as MCI } from '@expo/vector-icons';\nimport { AntDesign as AD } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport * as mutations from \"./graphql/mutations\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 15,\n    color: 'gray',\n    marginLeft: 10,\n    marginBottom: 10\n  },\n  backgroundColor: {\n    width: windowWidth - 20,\n    backgroundColor: 'rgb(25, 40, 65)',\n    alignSelf: 'center',\n    borderRadius: 10\n  },\n  container: {\n    backgroundColor: 'rgb(21, 34, 56)',\n    flex: 1,\n    flexDirection: 'column'\n  }\n});\nvar sensCodes = {\n  0: 'Low',\n  1: 'Medium',\n  2: 'High'\n};\n\nfunction EditPrinterView(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var temp;\n  var printer = route.params.printer;\n  var listPrinters = useSelector(function (state) {\n    temp = _toConsumableArray(state.listP);\n    return state.listP;\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      actionSheet = _useState2[0],\n      setActionSheet = _useState2[1];\n\n  function closeActionSheet() {\n    setActionSheet(false);\n  }\n\n  var actionItems = [{\n    id: 1,\n    label: React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        marginTop: 10,\n        marginBottom: 10,\n        marginLeft: 10,\n        color: sensCodes[printer.sensitivity] == 'Low' ? '#7CFC00' : 'gray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }\n    }, \"Low\"),\n    onPress: function onPress() {\n      updateSens(0);\n    }\n  }, {\n    id: 2,\n    label: React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        marginTop: 10,\n        marginBottom: 10,\n        marginLeft: 10,\n        color: sensCodes[printer.sensitivity] == 'Medium' ? '#7CFC00' : 'gray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }\n    }, \"Medium\"),\n    onPress: function onPress() {\n      updateSens(1);\n    }\n  }, {\n    id: 3,\n    label: React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        marginTop: 10,\n        marginBottom: 10,\n        marginLeft: 10,\n        color: sensCodes[printer.sensitivity] == 'High' ? '#7CFC00' : 'gray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 18\n      }\n    }, \"High\"),\n    onPress: function onPress() {\n      updateSens(2);\n    }\n  }];\n\n  function findPrinter() {\n    var returnVal;\n\n    for (i = 0; i < listPrinters.length; i++) {\n      if (printer.id == listPrinters[i].id) {\n        returnVal = i;\n        break;\n      }\n    }\n\n    return returnVal;\n  }\n\n  function updateSens(newValue) {\n    var i, update;\n    return _regeneratorRuntime.async(function updateSens$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            i = findPrinter();\n            closeActionSheet();\n            temp[i].sensitivity = newValue;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(mutations.updatePrinter, {\n              input: temp[i]\n            })));\n\n          case 5:\n            update = _context.sent;\n            dispatch(updatePrinter(temp));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var i = findPrinter();\n  var displayedPrinter = listPrinters[i];\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Printer Options\"), React.createElement(View, {\n    style: styles.backgroundColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row'\n    },\n    onPress: function onPress() {\n      return navigation.navigate('Edit Printer Name', {\n        printer: printer\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, React.createElement(MCI, {\n    name: \"printer-3d-nozzle\",\n    size: 20,\n    color: \"#7CFC00\",\n    style: {\n      marginLeft: 10,\n      marginTop: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 15,\n      marginLeft: 10,\n      marginTop: 15,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, \"Name: \", displayedPrinter.name), React.createElement(Icon, {\n    name: \"md-arrow-forward\",\n    size: 32,\n    color: \"#7CFC00\",\n    style: {\n      position: 'absolute',\n      right: 0,\n      marginRight: 10,\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  })), React.createElement(Divider, {\n    width: windowWidth - 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row'\n    },\n    onPress: function onPress() {\n      return setActionSheet(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, React.createElement(AD, {\n    name: \"dashboard\",\n    size: 20,\n    color: \"#7CFC00\",\n    style: {\n      marginLeft: 10,\n      marginTop: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 15,\n      marginLeft: 10,\n      marginTop: 15,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, \"Sensitivity\"), React.createElement(SensIndicator, {\n    style: {\n      position: 'absolute',\n      right: 0\n    },\n    printer: printer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  })), React.createElement(Divider, {\n    width: windowWidth - 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }), React.createElement(SwitchView, {\n    text: 'Notify on failure',\n    printer: printer,\n    icon: 'message-alert',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), React.createElement(Divider, {\n    width: windowWidth - 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }), React.createElement(SwitchView, {\n    text: 'Pause on failure',\n    printer: printer,\n    icon: 'pause-circle',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  })), React.createElement(Modal, {\n    visible: actionSheet,\n    animationType: \"slide\",\n    transparent: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, React.createElement(ActionSheet, {\n    actionItems: actionItems,\n    onCancel: closeActionSheet,\n    title: \"SENSETIVITY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }))));\n}\n\nfunction SensIndicator(props) {\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      position: 'absolute',\n      right: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#7CFC00',\n      fontSize: 13,\n      marginRight: 5,\n      marginTop: 17\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, sensCodes[props.printer.sensitivity]), React.createElement(Entypo, {\n    name: \"chevron-down\",\n    color: \"#7CFC00\",\n    size: 20,\n    style: {\n      marginRight: 10,\n      marginTop: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction SwitchView(props) {\n  var OFcodes = {\n    'Notify on failure': props.printer.notifyOnFail,\n    'Pause on failure': props.printer.pauseOnFail\n  };\n  var temp;\n  var listPrinters = useSelector(function (state) {\n    temp = _toConsumableArray(state.listP);\n    return state.listP;\n  });\n  var dispatch = useDispatch();\n\n  var _useState3 = useState(OFcodes[props.text]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      switchBool = _useState4[0],\n      setBool = _useState4[1];\n\n  function findPrinterIndex() {\n    var returnValue;\n\n    for (i = 0; i < temp.length; i++) {\n      if (temp[i].id == props.printer.id) {\n        returnValue = i;\n        break;\n      }\n    }\n\n    return returnValue;\n  }\n\n  function updateNOF(newValue) {\n    var i = findPrinterIndex();\n\n    if (props.text == 'Notify on failure') {\n      temp[i].notifyOnFail = newValue;\n    } else {\n      temp[i].pauseOnFail = newValue;\n    }\n\n    dispatch(updatePrinter(temp));\n    setBool(newValue);\n  }\n\n  function updateAndMutate(newValue) {\n    var update;\n    return _regeneratorRuntime.async(function updateAndMutate$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            updateNOF(newValue);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(mutations.updatePrinter, {\n              input: temp[i]\n            })));\n\n          case 3:\n            update = _context2.sent;\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, React.createElement(MCI, {\n    name: props.icon,\n    size: 20,\n    color: \"#7CFC00\",\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 15,\n      marginLeft: 10,\n      marginTop: 15,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, props.text), React.createElement(Switch, {\n    style: {\n      marginRight: 10,\n      position: 'absolute',\n      right: 0\n    },\n    trackColor: {\n      false: 'gray',\n      true: '#64bd62'\n    },\n    thumbColor: \"white\",\n    ios_backgroundColor: \"gray\",\n    onValueChange: function onValueChange(value) {\n      updateAndMutate(value);\n    },\n    value: switchBool,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport { EditPrinterView };","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/EditPrinterView.js"],"names":["React","Divider","useSelector","useDispatch","TouchableOpacity","updatePrinter","useEffect","useState","useReducer","ActionSheet","Ionicons","Icon","MaterialCommunityIcons","MCI","AntDesign","AD","Entypo","mutations","API","graphqlOperation","windowWidth","Dimensions","get","width","windowHeight","height","styles","StyleSheet","create","text","fontSize","color","marginLeft","marginBottom","backgroundColor","alignSelf","borderRadius","container","flex","flexDirection","sensCodes","EditPrinterView","route","navigation","temp","printer","params","listPrinters","state","listP","dispatch","actionSheet","setActionSheet","closeActionSheet","actionItems","id","label","marginTop","sensitivity","onPress","updateSens","findPrinter","returnVal","i","length","newValue","graphql","input","update","displayedPrinter","navigate","name","position","right","marginRight","SensIndicator","props","SwitchView","OFcodes","notifyOnFail","pauseOnFail","switchBool","setBool","findPrinterIndex","returnValue","updateNOF","updateAndMutate","alignItems","icon","false","true","value"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Text, Button, StyleSheet, Image, ScrollView, Dimensions, ImageBackground, Switch, Modal } from 'react-native';\nimport { Divider } from './Divider.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { updatePrinter } from './updatePrinters.js';\nimport { useEffect, useState, useReducer } from 'react'\nimport ActionSheet from './ActionSheet.js';\nimport { Ionicons as Icon} from '@expo/vector-icons';\nimport { MaterialCommunityIcons as MCI } from '@expo/vector-icons';\nimport { AntDesign as AD} from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport * as mutations from './graphql/mutations';\nimport { API, graphqlOperation } from \"aws-amplify\";\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst styles = StyleSheet.create({\n    text: \n    {\n        fontSize: 15, \n        color: 'gray', \n        marginLeft: 10, \n        marginBottom: 10,\n    },\n    backgroundColor:\n    {\n        width: windowWidth - 20,\n        backgroundColor: 'rgb(25, 40, 65)',\n        alignSelf: 'center',\n        borderRadius: 10,\n    },\n    container: \n    {\n        backgroundColor: 'rgb(21, 34, 56)',\n        flex: 1,\n        flexDirection: 'column'\n    }\n  })\n\nconst sensCodes = { 0: 'Low', 1: 'Medium', 2: 'High' }\n\nfunction EditPrinterView({route, navigation})\n{\n    var temp;\n    const { printer } = route.params;\n\n    const listPrinters = useSelector(state => { temp = [...state.listP]; return state.listP })\n    const dispatch = useDispatch()\n    const [actionSheet, setActionSheet] = useState(false)\n    function closeActionSheet()\n    {\n        setActionSheet(false)\n    }\n\n    const actionItems = [\n        {\n          id: 1,\n          label: <Text style={{ fontSize: 15, marginTop: 10, marginBottom: 10, marginLeft: 10, color:(sensCodes[printer.sensitivity] == 'Low' ? '#7CFC00' : 'gray') }}>Low</Text>,\n          onPress: () => {\n            updateSens(0)\n          }\n        },\n        {\n          id: 2,\n          label: <Text style={{ fontSize: 15, marginTop: 10, marginBottom: 10, marginLeft: 10, color:(sensCodes[printer.sensitivity] == 'Medium' ? '#7CFC00' : 'gray') }}>Medium</Text>,\n          onPress: () => {\n            updateSens(1)\n          }\n        },\n        {\n          id: 3,\n          label: <Text style={{ fontSize: 15, marginTop: 10, marginBottom: 10, marginLeft: 10, color:(sensCodes[printer.sensitivity] == 'High' ? '#7CFC00' : 'gray') }}>High</Text>,\n          onPress: () => {\n            updateSens(2)\n          }\n        },\n    ];\n\n    function findPrinter()\n    {\n        var returnVal;\n\n        for (i = 0; i < listPrinters.length; i++)\n        {\n            if (printer.id == listPrinters[i].id)\n            {\n                returnVal = i\n                break\n            }\n        }\n\n        return returnVal\n    }\n\n    //Updates the sensitivity of the printer\n    async function updateSens(newValue)\n    {\n        var i = findPrinter()\n\n        closeActionSheet()\n\n        temp[i].sensitivity = newValue\n\n        //Mutate API\n        const update = await API.graphql(graphqlOperation(mutations.updatePrinter, {input: temp[i]}));\n\n        dispatch(updatePrinter(temp))\n    }\n\n    let i = findPrinter()\n    var displayedPrinter = listPrinters[i]\n\n    return(\n        <React.Fragment>\n            <View style={ styles.container }>\n                <Text style={ styles.text }>Printer Options</Text>\n                <View style={ styles.backgroundColor }>\n                    <TouchableOpacity style={{ flexDirection: 'row' }} onPress={() => navigation.navigate('Edit Printer Name', { printer: printer })} >\n                        <MCI name='printer-3d-nozzle' size={20} color='#7CFC00' style={{ marginLeft: 10, marginTop: 15 }} />\n                        <Text style={{ color: 'white', fontSize: 15, marginLeft: 10, marginTop: 15, marginBottom: 10 }}>Name: { displayedPrinter.name }</Text>\n                        <Icon name='md-arrow-forward' size={32} color='#7CFC00' style={{ position: 'absolute', right: 0, marginRight: 10, marginTop: 10 }}/>\n                    </TouchableOpacity>\n                    <Divider width={windowWidth - 20}/>\n                    <TouchableOpacity style={{ flexDirection: 'row' }} onPress={() => setActionSheet(true)}>\n                        <AD name='dashboard' size={20} color='#7CFC00' style={{ marginLeft: 10, marginTop: 15 }} />\n                        <Text style={{ color: 'white', fontSize: 15, marginLeft: 10, marginTop: 15, marginBottom: 10 }}>Sensitivity</Text>\n                        <SensIndicator style={{ position: 'absolute', right: 0 }} printer={printer} />\n                    </TouchableOpacity>\n                    <Divider width={windowWidth - 20}/>\n                    <SwitchView text={'Notify on failure'} printer={printer} icon={'message-alert'} />\n                    <Divider width={windowWidth - 20}/>\n                    <SwitchView text={'Pause on failure'} printer={printer}  icon={'pause-circle'} />\n                </View>\n                <Modal\n                    visible={actionSheet}\n                    animationType='slide'\n                    transparent={true}\n                >\n                    <ActionSheet\n                        actionItems={actionItems}\n                        onCancel={closeActionSheet}\n                        title='SENSETIVITY'\n                    />\n                </Modal>\n            </View>\n        </React.Fragment>\n    )\n}\n\nfunction SensIndicator(props)\n{\n    return(\n        <View style={{ flexDirection: 'row', position: 'absolute', right: 0 }}>\n            <Text style={{ color: '#7CFC00', fontSize: 13, marginRight: 5, marginTop: 17 }}>{sensCodes[props.printer.sensitivity]}</Text>\n            <Entypo name='chevron-down' color='#7CFC00' size={20} style={{ marginRight: 10, marginTop: 15 }}/>\n        </View>\n    )\n}\n\nfunction SwitchView(props)\n{\n    var OFcodes = { 'Notify on failure':props.printer.notifyOnFail, 'Pause on failure':props.printer.pauseOnFail }\n\n    var temp;\n    const listPrinters = useSelector(state => { temp = [...state.listP]; return state.listP })\n    const dispatch = useDispatch()\n\n    const [switchBool, setBool] = useState(OFcodes[props.text])\n\n    function findPrinterIndex()\n    {\n        var returnValue;\n\n        for (i=0; i<temp.length; i++)\n        {\n            if (temp[i].id == props.printer.id)\n            {\n                returnValue = i\n                break\n            }\n        }\n\n        return returnValue\n    }\n    //Updates the \n    function updateNOF(newValue)\n    {\n        var i = findPrinterIndex()\n\n        if (props.text == 'Notify on failure')\n        {\n            temp[i].notifyOnFail = newValue\n        }else \n        {\n            temp[i].pauseOnFail = newValue\n        }\n\n        dispatch(updatePrinter(temp))\n\n        setBool(newValue)\n    }\n\n    async function updateAndMutate(newValue)\n    {\n        updateNOF(newValue)\n\n        //Mutate API\n        const update = await API.graphql(graphqlOperation(mutations.updatePrinter, {input: temp[i]}));\n    }\n\n    return(\n        <View style={{ flexDirection: 'row', alignItems: 'center'}}>\n            <MCI name={props.icon} size={20} color='#7CFC00' style={{ marginLeft: 10, }} />\n            <Text style={{ color: 'white', fontSize: 15, marginLeft: 10, marginTop: 15, marginBottom: 10 }}>{props.text}</Text>\n            <Switch\n                style={{marginRight: 10, position: 'absolute', right: 0 }}\n                trackColor={{ false: 'gray', true: '#64bd62' }}\n                thumbColor=\"white\"\n                ios_backgroundColor=\"gray\"\n                onValueChange={(value) => { updateAndMutate(value) }}\n                value={switchBool}\n            />\n        </View>\n    )\n}\n\nexport { EditPrinterView };"]},"metadata":{},"sourceType":"module"}
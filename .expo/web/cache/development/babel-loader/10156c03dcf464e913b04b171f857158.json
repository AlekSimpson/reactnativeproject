{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/ConfirmCancelView.js\";\nimport * as React from 'react';\nimport { useEffect, useState, useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport { State, TapGestureHandler, TouchableHighlight } from \"react-native-gesture-handler\";\nimport { ConfirmCancelButton } from \"./ConfirmCancelButton\";\nimport { mix, onGestureEvent, withTransition } from 'react-native-redash';\nimport Animated, { Value, cond, eq } from 'react-native-reanimated';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updatePrinter } from \"./updatePrinters.js\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar CircleDiameter = windowWidth / 1.5;\n\nfunction ConfirmCancelView(printer) {\n  var temp;\n  var listPrinters = useSelector(function (state) {\n    temp = _toConsumableArray(state.listP);\n    return state.listP;\n  });\n  var dispatch = useDispatch();\n\n  function findPrinter() {\n    var returnValue;\n\n    for (i = 0; i < temp.length; i++) {\n      if (temp[i].id == printer.printer.id) {\n        returnValue = i;\n        break;\n      }\n    }\n\n    return returnValue;\n  }\n\n  function updateStatus(newStatus) {\n    var printerArray = _toConsumableArray(listPrinters);\n\n    var i = findPrinter();\n    printerArray[i].status = newStatus;\n    dispatch(updatePrinter(printerArray));\n    printer.toggleBack();\n  }\n\n  return React.createElement(View, {\n    style: {\n      marginTop: windowHeight / 9\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableHighlight, {\n    onLongPress: function onLongPress() {\n      return updateStatus(1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Hold to Cancel\")));\n}\n\nexport { ConfirmCancelView };","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/ConfirmCancelView.js"],"names":["React","useEffect","useState","useReducer","State","TapGestureHandler","TouchableHighlight","ConfirmCancelButton","mix","onGestureEvent","withTransition","Animated","Value","cond","eq","useSelector","useDispatch","updatePrinter","windowWidth","Dimensions","get","width","windowHeight","height","CircleDiameter","ConfirmCancelView","printer","temp","listPrinters","state","listP","dispatch","findPrinter","returnValue","i","length","id","updateStatus","newStatus","printerArray","status","toggleBack","marginTop"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;;;;;;;;;;AAEA,SAASC,KAAT,EAAgBC,iBAAhB,EAAmCC,kBAAnC,QAA6D,8BAA7D;AACA,SAASC,mBAAT;AACA,SAASC,GAAT,EAAcC,cAAd,EAA8BC,cAA9B,QAAoD,qBAApD;AACA,OAAOC,QAAP,IAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,EAAhC,QAA0C,yBAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT;AAEA,IAAMC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA7C;AACA,IAAMC,YAAY,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAA9C;AAEA,IAAMC,cAAc,GAAIN,WAAW,GAAG,GAAtC;;AAIA,SAASO,iBAAT,CAA2BC,OAA3B,EACA;AACE,MAAIC,IAAJ;AACA,MAAMC,YAAY,GAAGb,WAAW,CAAC,UAAAc,KAAK,EAAI;AAAEF,IAAAA,IAAI,sBAAOE,KAAK,CAACC,KAAb,CAAJ;AAAyB,WAAOD,KAAK,CAACC,KAAb;AAAoB,GAAzD,CAAhC;AACA,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;;AAGA,WAASgB,WAAT,GACA;AACE,QAAIC,WAAJ;;AAEA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGP,IAAI,CAACQ,MAArB,EAA6BD,CAAC,EAA9B,EACA;AACE,UAAIP,IAAI,CAACO,CAAD,CAAJ,CAAQE,EAAR,IAAcV,OAAO,CAACA,OAAR,CAAgBU,EAAlC,EACA;AACEH,QAAAA,WAAW,GAAGC,CAAd;AACA;AACD;AACF;;AACD,WAAOD,WAAP;AACD;;AAGD,WAASI,YAAT,CAAsBC,SAAtB,EACA;AACE,QAAIC,YAAY,sBAAOX,YAAP,CAAhB;;AACA,QAAIM,CAAC,GAAGF,WAAW,EAAnB;AAEAO,IAAAA,YAAY,CAACL,CAAD,CAAZ,CAAgBM,MAAhB,GAAyBF,SAAzB;AAEAP,IAAAA,QAAQ,CAACd,aAAa,CAACsB,YAAD,CAAd,CAAR;AACAb,IAAAA,OAAO,CAACe,UAAR;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAEpB,YAAY,GAAG;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAoB,IAAA,WAAW,EAAE;AAAA,aAAMe,YAAY,CAAC,CAAD,CAAlB;AAAA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CADF;AAOD;;AAED,SAAQZ,iBAAR","sourcesContent":["import * as React from 'react';\nimport { useEffect, useState, useReducer } from 'react'\nimport { View, Text, Button, StyleSheet, Image, ScrollView, Dimensions, ImageBackground, Touchable } from 'react-native';\nimport { State, TapGestureHandler, TouchableHighlight } from \"react-native-gesture-handler\";\nimport { ConfirmCancelButton } from './ConfirmCancelButton';\nimport { mix, onGestureEvent, withTransition } from 'react-native-redash';\nimport Animated, { Value, cond, eq } from 'react-native-reanimated';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updatePrinter } from './updatePrinters.js';\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst CircleDiameter = (windowWidth / 1.5)\n\n\n//<View style={styles.circle}/>\nfunction ConfirmCancelView(printer)\n{\n  var temp;\n  const listPrinters = useSelector(state => { temp = [...state.listP]; return state.listP })\n  const dispatch = useDispatch()\n\n  //Returns the index of the printer that was passed in\n  function findPrinter()\n  {\n    var returnValue;\n    \n    for (i = 0; i < temp.length; i++)\n    {\n      if (temp[i].id == printer.printer.id)\n      {\n        returnValue = i\n        break\n      }\n    }\n    return returnValue\n  }\n\n  //Updates the global state of a certain printer\n  function updateStatus(newStatus)\n  {\n    var printerArray = [...listPrinters]\n    let i = findPrinter()\n\n    printerArray[i].status = newStatus\n\n    dispatch(updatePrinter(printerArray))\n    printer.toggleBack()\n  }\n\n  return(\n    <View style={{marginTop: windowHeight / 9 }}>\n      <TouchableHighlight onLongPress={() => updateStatus(1)}>\n        <Text>Hold to Cancel</Text>\n      </TouchableHighlight>\n    </View>\n  )\n}\n\nexport {ConfirmCancelView};"]},"metadata":{},"sourceType":"module"}
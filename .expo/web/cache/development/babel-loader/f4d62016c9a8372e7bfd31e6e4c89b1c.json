{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/PauseOrCancelView.js\";\nimport * as React from 'react';\nimport { useEffect, useState, useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updatePrinter } from \"./actions/updatePrinters.js\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar StatusCodes = {\n  0: 'Offline',\n  1: 'Asleep',\n  2: 'Printing',\n  3: 'Paused'\n};\n\nfunction Divider() {\n  return React.createElement(View, {\n    style: {\n      backgroundColor: 'gray',\n      height: 0.5,\n      width: windowWidth / 1.16,\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction PauseOrCancelView(printer) {\n  var temp;\n  var listPrinters = useSelector(function (state) {\n    temp = _toConsumableArray(state);\n    return state;\n  });\n  var dispatch = useDispatch();\n  var title = StatusCodes[printer.printer.status];\n\n  function findPrinter() {\n    var returnValue;\n\n    for (i = 0; i < temp.length; i++) {\n      if (temp[i].id == printer.printer.id) {\n        returnValue = i;\n      }\n    }\n\n    return returnValue;\n  }\n\n  function cancelPrint() {\n    var printerArray = _toConsumableArray(listPrinters);\n\n    var i = findPrinter();\n    printerArray[i].status = 2;\n    dispatch(updatePrinter(printerArray));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Cancel\",\n    onPress: function onPress() {\n      return cancelPrint();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport { PauseOrCancelView };","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/PauseOrCancelView.js"],"names":["React","useEffect","useState","useReducer","useSelector","useDispatch","updatePrinter","windowWidth","Dimensions","get","width","windowHeight","height","StatusCodes","Divider","backgroundColor","marginTop","PauseOrCancelView","printer","temp","listPrinters","state","dispatch","title","status","findPrinter","returnValue","i","length","id","cancelPrint","printerArray"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;;;;;;;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT;AAEA,IAAMC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA7C;AACA,IAAMC,YAAY,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAA9C;AAEA,IAAIC,WAAW,GAAG;AAAC,KAAG,SAAJ;AAAe,KAAG,QAAlB;AAA4B,KAAG,UAA/B;AAA2C,KAAG;AAA9C,CAAlB;;AAEA,SAASC,OAAT,GACA;AACE,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAE,MADZ;AAELH,MAAAA,MAAM,EAAE,GAFH;AAGLF,MAAAA,KAAK,EAAEH,WAAW,GAAG,IAHhB;AAILS,MAAAA,SAAS,EAAE;AAJN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD;;AAED,SAASC,iBAAT,CAA2BC,OAA3B,EACA;AACE,MAAIC,IAAJ;AACA,MAAMC,YAAY,GAAGhB,WAAW,CAAC,UAAAiB,KAAK,EAAI;AAAEF,IAAAA,IAAI,sBAAOE,KAAP,CAAJ;AAAmB,WAAOA,KAAP;AAAc,GAA7C,CAAhC;AACA,MAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AAEA,MAAIkB,KAAK,GAAGV,WAAW,CAACK,OAAO,CAACA,OAAR,CAAgBM,MAAjB,CAAvB;;AAEA,WAASC,WAAT,GACA;AACE,QAAIC,WAAJ;;AAEA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGR,IAAI,CAACS,MAArB,EAA6BD,CAAC,EAA9B,EACA;AACE,UAAIR,IAAI,CAACQ,CAAD,CAAJ,CAAQE,EAAR,IAAcX,OAAO,CAACA,OAAR,CAAgBW,EAAlC,EACA;AACEH,QAAAA,WAAW,GAAGC,CAAd;AACD;AACF;;AACD,WAAOD,WAAP;AACD;;AAED,WAASI,WAAT,GACA;AACE,QAAIC,YAAY,sBAAOX,YAAP,CAAhB;;AACA,QAAIO,CAAC,GAAGF,WAAW,EAAnB;AAEAM,IAAAA,YAAY,CAACJ,CAAD,CAAZ,CAAgBH,MAAhB,GAAyB,CAAzB;AAEAF,IAAAA,QAAQ,CAAChB,aAAa,CAACyB,YAAD,CAAd,CAAR;AACD;;AAED,SACE,0CACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAER,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGM,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE;AAAA,aAAMO,WAAW,EAAjB;AAAA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,EAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAED,SAAQb,iBAAR","sourcesContent":["import * as React from 'react';\nimport { useEffect, useState, useReducer } from 'react'\nimport { View, Text, Button, StyleSheet, Image, ScrollView, Dimensions, ImageBackground } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updatePrinter } from './actions/updatePrinters.js';\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nlet StatusCodes = {0: 'Offline', 1: 'Asleep', 2: 'Printing', 3: 'Paused'}\n\nfunction Divider()\n{\n  return(\n    <View\n      style={{\n        backgroundColor: 'gray',\n        height: 0.5,\n        width: windowWidth / 1.16,\n        marginTop: 10\n      }}\n    />\n  )\n}\n\nfunction PauseOrCancelView(printer)\n{\n  var temp;\n  const listPrinters = useSelector(state => { temp = [...state]; return state })\n  const dispatch = useDispatch()\n\n  var title = StatusCodes[printer.printer.status]\n\n  function findPrinter()\n  {\n    var returnValue;\n    \n    for (i = 0; i < temp.length; i++)\n    {\n      if (temp[i].id == printer.printer.id)\n      {\n        returnValue = i\n      }\n    }\n    return returnValue\n  }\n\n  function cancelPrint()\n  {\n    var printerArray = [...listPrinters]\n    let i = findPrinter()\n\n    printerArray[i].status = 2\n\n    dispatch(updatePrinter(printerArray))\n  }\n\n  return(\n    <>\n      <Button title={title}/>\n      <Divider/>\n          <Button title=\"Cancel\" onPress={() => cancelPrint()}/>\n      <Divider/>\n    </>\n  )\n}\n\nexport {PauseOrCancelView};"]},"metadata":{},"sourceType":"module"}
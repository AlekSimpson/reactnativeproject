{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/LoadingCardView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { useState, useEffect } from 'react';\nimport { Loading } from 'aws-amplify-react-native/dist/Auth';\nimport { lighter, darker } from \"./Colors.js\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar imageHeight = windowHeight / 4;\nvar safeWindowHeight = windowWidth > 375 ? 110 : 85;\nvar styles = StyleSheet.create({\n  background: {\n    width: windowWidth - 30,\n    height: imageHeight,\n    paddingTop: '2%',\n    paddingBottom: '2%',\n    marginTop: 25,\n    shadowColor: 'transparent',\n    borderRadius: 10,\n    backgroundColor: 'rgb(25, 40, 65)'\n  },\n  bottomBanner: {\n    width: windowWidth - 30,\n    height: 37,\n    opacity: .8,\n    position: 'absolute',\n    bottom: 0,\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    backgroundColor: 'rgb(32, 51, 84)'\n  }\n});\n\nfunction LoadingCardsView() {\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(LoadingCard, {\n    showAnimation: true,\n    showBanner: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(LoadingCard, {\n    showAnimation: true,\n    showBanner: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(LoadingCard, {\n    showAnimation: true,\n    showBanner: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction LoadingCard(_ref) {\n  var showAnimation = _ref.showAnimation,\n      showBanner = _ref.showBanner,\n      _ref$extraStyle = _ref.extraStyle,\n      extraStyle = _ref$extraStyle === void 0 ? {} : _ref$extraStyle;\n\n  var _useState = useState(new Animated.Value(0)),\n      _useState2 = _slicedToArray(_useState, 2),\n      animation = _useState2[0],\n      setAnimation = _useState2[1];\n\n  var handleAnimation = function handleAnimation() {\n    Animated.timing(animation, {\n      toValue: 1,\n      duration: 1000,\n      useNativeDriver: false\n    }).start(function () {\n      Animated.timing(animation, {\n        toValue: 0,\n        duration: 1000,\n        useNativeDriver: false\n      }).start(function () {\n        handleAnimation();\n      });\n    });\n  };\n\n  var backgroundInterpolation = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [darker['two'], darker['one']]\n  });\n  var bannerInterpolation = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [darker['four'], darker['three']]\n  });\n  var animatedStyle = {\n    backgroundColor: backgroundInterpolation\n  };\n  var bannerStyle = {\n    backgroundColor: bannerInterpolation\n  };\n  useEffect(function () {\n    if (showAnimation) {\n      handleAnimation();\n    }\n  }, []);\n  return React.createElement(Animated.View, {\n    style: _objectSpread(_objectSpread(_objectSpread({}, styles.background), animatedStyle), extraStyle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, showBanner && React.createElement(Animated.View, {\n    style: _objectSpread(_objectSpread({}, styles.bottomBanner), bannerStyle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport { LoadingCardsView, LoadingCard };","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/LoadingCardView.js"],"names":["React","useState","useEffect","Loading","lighter","darker","windowWidth","Dimensions","get","width","windowHeight","height","imageHeight","safeWindowHeight","styles","StyleSheet","create","background","paddingTop","paddingBottom","marginTop","shadowColor","borderRadius","backgroundColor","bottomBanner","opacity","position","bottom","borderBottomLeftRadius","borderBottomRightRadius","LoadingCardsView","LoadingCard","showAnimation","showBanner","extraStyle","Animated","Value","animation","setAnimation","handleAnimation","timing","toValue","duration","useNativeDriver","start","backgroundInterpolation","interpolate","inputRange","outputRange","bannerInterpolation","animatedStyle","bannerStyle"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Text, Button, StyleSheet, Image, ScrollView, Dimensions, ImageBackground, Animated } from 'react-native';\nimport { useState, useEffect } from 'react'\nimport { Loading } from 'aws-amplify-react-native/dist/Auth';\nimport { lighter, darker } from './Colors.js';\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst imageHeight = windowHeight / 4\n\nconst safeWindowHeight = (windowWidth > 375 ? 110 : 85)\n\nconst styles = StyleSheet.create({\n  background: \n  {\n    width: windowWidth - 30,\n    height: imageHeight,\n    paddingTop: '2%',\n    paddingBottom: '2%',\n    marginTop: 25,\n    shadowColor: 'transparent',\n    borderRadius:10,\n    backgroundColor: 'rgb(25, 40, 65)'\n  },\n  bottomBanner: \n  {\n    width: windowWidth - 30,\n    height: 37,\n    opacity: .8,\n    position: 'absolute',\n    bottom: 0,\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    backgroundColor: 'rgb(32, 51, 84)'\n  },\n})\n\nfunction LoadingCardsView()\n{\n  return(\n    <View>\n      <LoadingCard showAnimation={true} showBanner={true}/>\n      <LoadingCard showAnimation={true} showBanner={true}/>\n      <LoadingCard showAnimation={true} showBanner={true}/>\n    </View>\n  )\n}\n\nfunction LoadingCard({showAnimation, showBanner, extraStyle={}})\n{\n  const [animation, setAnimation] = useState(new Animated.Value(0))\n\n  const handleAnimation = () => \n  {\n    Animated.timing(animation, \n    {\n      toValue:1,\n      duration: 1000,\n      useNativeDriver: false\n    }).start( () => \n    {\n      Animated.timing(animation,\n      {\n        toValue:0,\n        duration: 1000,\n        useNativeDriver: false\n      }).start(() => { handleAnimation()})\n    }) \n  }\n\n  const backgroundInterpolation = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange:[darker['two'], darker['one']]\n  })\n\n  const bannerInterpolation = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [darker['four'], darker['three']]\n  })\n\n  const animatedStyle = {\n    backgroundColor: backgroundInterpolation\n  }\n  \n  const bannerStyle = {\n    backgroundColor: bannerInterpolation\n  }\n\n  useEffect(() => \n  {\n    if (showAnimation)\n    {\n      handleAnimation()\n    }\n  }, [])\n\n  return(\n    <Animated.View style={{...styles.background, ...animatedStyle, ...extraStyle}}>\n        {(showBanner)&&\n          <Animated.View style={{ ...styles.bottomBanner, ...bannerStyle }} />\n        }\n    </Animated.View>\n  )\n}\n\n\n\nexport { LoadingCardsView, LoadingCard };"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/OverlayView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { useEffect, useState, useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { PauseOrCancelView } from \"./PauseOrCancelView\";\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons as Icon } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Easing } from 'react-native-reanimated';\nimport { OverlayViewStyles as styles } from \"./Styles.js\";\nvar AnimatedEntypo = Animated.createAnimatedComponent(Entypo);\nvar windowHeight = Dimensions.get('window').height;\n\nfunction OverlayView(props) {\n  var printerProgress = props.printer.printerState != null ? props.printer.printerState.progress != null ? props.printer.printerState.progress : 0 : 0;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPauseOrCancelView = _useState2[0],\n      setShowPause = _useState2[1];\n\n  var _useState3 = useState(new Animated.Value(0)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      spinAnimation = _useState4[0],\n      setSpinAnimation = _useState4[1];\n\n  var _useState5 = useState(new Animated.Value(0)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      slideAnimation = _useState6[0],\n      setSlideAnimation = _useState6[1];\n\n  var _useState7 = useState('slideUp'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentSlideStr = _useState8[0],\n      setCurrentSlideStr = _useState8[1];\n\n  var _useState9 = useState('spinDown'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentStrSpin = _useState10[0],\n      setStrSpin = _useState10[1];\n\n  var spinUp = spinAnimation.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg']\n  });\n  var spinDown = spinAnimation.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['180deg', '0deg']\n  });\n  var slideDown = spinAnimation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [-200, 0]\n  });\n  var slideUp = spinAnimation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, -200]\n  });\n\n  var _useState11 = useState(spinDown),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentSpin = _useState12[0],\n      setSpin = _useState12[1];\n\n  var _useState13 = useState(slideUp),\n      _useState14 = _slicedToArray(_useState13, 2),\n      currentSlide = _useState14[0],\n      setSlide = _useState14[1];\n\n  var toggleSpin = {\n    'spinUp': spinDown,\n    'spinDown': spinUp\n  };\n  var toggleStrSpin = {\n    'spinUp': 'spinDown',\n    'spinDown': 'spinUp'\n  };\n  var toggleSlide = {\n    'slideUp': slideDown,\n    'slideDown': slideUp\n  };\n  var toggleStrSlide = {\n    'slideUp': 'slideDown',\n    'slideDown': 'slideUp'\n  };\n  var marginStyle = {\n    marginTop: (!props.isCardView ? windowHeight / 8.9 : windowHeight / 4 / 4) - 10\n  };\n  var moonStyle = {\n    marginTop: (!props.isCardView ? windowHeight / 8.9 : windowHeight / 4 / 4) - 20\n  };\n  var icon = {\n    0: React.createElement(Feather, {\n      name: \"wifi-off\",\n      size: props.fontSize + 10,\n      color: \"white\",\n      style: styles.iconStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 8\n      }\n    }),\n    1: React.createElement(Icon, {\n      name: \"ios-moon\",\n      size: props.fontSize + 20,\n      color: \"white\",\n      style: _objectSpread(_objectSpread({}, styles.iconStyle), moonStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 8\n      }\n    }),\n    3: React.createElement(Icon, {\n      name: \"ios-pause\",\n      size: props.fontSize + 10,\n      color: \"white\",\n      style: _objectSpread(_objectSpread({}, styles.iconStyle), marginStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }\n    })\n  };\n  var AsleepOrOffline = props.printer.status == 1 || props.printer.status == 0 ? true : false;\n  var isDisplayingIcon = props.printer.status == 1 || props.printer.status == 0 || props.printer.status == 3 ? true : false;\n\n  function handleSlideAnimation() {\n    var toggleSlideDirection = toggleSlide[currentSlideStr];\n    var toggleStrSlideDirection = toggleStrSlide[currentSlideStr];\n    setSlide(toggleSlideDirection);\n    setCurrentSlideStr(toggleStrSlideDirection);\n    Animated.spring(slideAnimation, {\n      toValue: 1,\n      easing: Easing.linear,\n      useNativeDriver: false\n    }).start(function () {\n      setSlideAnimation(new Animated.Value(0));\n    });\n  }\n\n  function handleSpinAnimation() {\n    var newSpin = toggleSpin[currentStrSpin];\n    var newStrSpin = toggleStrSpin[currentStrSpin];\n    setSpin(newSpin);\n    setStrSpin(newStrSpin);\n    Animated.timing(spinAnimation, {\n      toValue: 1,\n      duration: 250,\n      easing: Easing.linear,\n      useNativeDriver: false\n    }).start(function () {\n      setSpinAnimation(new Animated.Value(0));\n    });\n  }\n\n  function toggleShowPause() {\n    handleSlideAnimation();\n    handleSpinAnimation();\n\n    if (showPauseOrCancelView == 1) {\n      setShowPause(0);\n    } else if (showPauseOrCancelView == 0) {\n      setShowPause(1);\n    }\n  }\n\n  useEffect(function () {\n    setSpin(spinUp);\n  }, []);\n  return React.createElement(View, {\n    style: {\n      alignContent: 'center',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, showPauseOrCancelView == 0 && React.createElement(React.Fragment, null, props.printer.status == 2 && React.createElement(View, {\n    style: {\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: props.fontSize,\n      color: 'white',\n      marginTop: Math.round(windowHeight * 0.0308)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, printerProgress, \"%\"), React.createElement(Text, {\n    style: styles.printingViewText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, props.compeletedText)), isDisplayingIcon && icon[props.printer.status]), showPauseOrCancelView == 1 && React.createElement(Animated.View, {\n    style: [styles.pauseOrCancelView, {\n      transform: [{\n        translateY: currentSlide\n      }]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, React.createElement(PauseOrCancelView, {\n    printer: props.printer,\n    toggleShowPause: toggleShowPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  })), !props.isCardView && !AsleepOrOffline && React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleShowPause();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, React.createElement(AnimatedEntypo, {\n    name: \"chevron-down\",\n    size: 32,\n    color: \"#7CFC00\",\n    style: {\n      marginTop: 20,\n      transform: [{\n        rotate: currentSpin\n      }]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport { OverlayView };","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/OverlayView.js"],"names":["React","useEffect","useState","useReducer","PauseOrCancelView","Feather","Ionicons","Icon","Entypo","TouchableOpacity","Easing","OverlayViewStyles","styles","AnimatedEntypo","Animated","createAnimatedComponent","windowHeight","Dimensions","get","height","OverlayView","props","printerProgress","printer","printerState","progress","showPauseOrCancelView","setShowPause","Value","spinAnimation","setSpinAnimation","slideAnimation","setSlideAnimation","currentSlideStr","setCurrentSlideStr","currentStrSpin","setStrSpin","spinUp","interpolate","inputRange","outputRange","spinDown","slideDown","slideUp","currentSpin","setSpin","currentSlide","setSlide","toggleSpin","toggleStrSpin","toggleSlide","toggleStrSlide","marginStyle","marginTop","isCardView","moonStyle","icon","fontSize","iconStyle","AsleepOrOffline","status","isDisplayingIcon","handleSlideAnimation","toggleSlideDirection","toggleStrSlideDirection","spring","toValue","easing","linear","useNativeDriver","start","handleSpinAnimation","newSpin","newStrSpin","timing","duration","toggleShowPause","alignContent","alignItems","justifyContent","flexDirection","fontWeight","color","Math","round","printingViewText","compeletedText","pauseOrCancelView","transform","translateY","rotate"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, useState, useReducer } from 'react'\nimport { View, Text, Button, StyleSheet, Image, ScrollView, Dimensions, Animated } from 'react-native';\nimport { PauseOrCancelView } from './PauseOrCancelView';\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons as Icon } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Easing } from 'react-native-reanimated';\nimport { OverlayViewStyles as styles } from './Styles.js'\n\nconst AnimatedEntypo = Animated.createAnimatedComponent(Entypo);\n\nconst windowHeight = Dimensions.get('window').height;\n\n/*\n|***STATUS CODES KEYS***|\n\n0: Offline,\n1: Asleep,\n2: Printing,\n3: Paused\n*/\n\nfunction OverlayView(props)\n{\n  /* VARIABLES */\n  var printerProgress = (props.printer.printerState != null ? (props.printer.printerState.progress != null ? props.printer.printerState.progress : 0) : 0)\n  const [showPauseOrCancelView, setShowPause] = useState(0)\n\n  const [spinAnimation, setSpinAnimation] = useState(new Animated.Value(0))\n\n  const [slideAnimation, setSlideAnimation] = useState(new Animated.Value(0))\n\n  //This translates the slide into a string to make it easier to toggle\n  const [currentSlideStr, setCurrentSlideStr] = useState('slideUp')\n\n  //This translates the spin into a string so that toggling between them is easier\n  const [currentStrSpin, setStrSpin] = useState('spinDown')\n\n  //Spins up\n  const spinUp = spinAnimation.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg']\n  })\n  \n  //Spins down\n  const spinDown = spinAnimation.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['180deg', '0deg']\n  })\n\n  //Slides down\n  const slideDown = spinAnimation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [-200, 0]\n  })\n  \n  //Slides up\n  const slideUp = spinAnimation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, -200]\n  })\n\n  //The current spin the arrow has (better word is direction but I used spin for whatever reason)\n  const [currentSpin, setSpin] = useState(spinDown)\n\n  //The current slide that the view will have\n  const [currentSlide, setSlide] = useState(slideUp)\n\n  //toggles spin animation action\n  const toggleSpin = { 'spinUp' : spinDown, 'spinDown' : spinUp }\n\n  //toggles string spin\n  const toggleStrSpin = { 'spinUp' : 'spinDown', 'spinDown' : 'spinUp' }\n\n  //toggles slide animation action\n  const toggleSlide = { 'slideUp' : slideDown, 'slideDown' : slideUp }\n\n  //toggles string slide \n  const toggleStrSlide = { 'slideUp' : 'slideDown', 'slideDown' : 'slideUp' }\n\n  const marginStyle = {\n    marginTop: (!props.isCardView ? windowHeight/8.9 : ((windowHeight/4)/4)) - 10, \n  }\n\n  const moonStyle = {\n    marginTop: (!props.isCardView ? windowHeight/8.9 : ((windowHeight/4)/4)) - 20, \n  }\n\n  let icon = {\n    0: <Feather name='wifi-off' size={props.fontSize + 10} color='white' style={styles.iconStyle}/>,\n    1: <Icon name='ios-moon' size={props.fontSize + 20} color='white' style={{ ...styles.iconStyle, ...moonStyle }}/>,\n    3: <Icon name='ios-pause' size={props.fontSize + 10} color='white' style={{ ...styles.iconStyle, ...marginStyle }}/>\n  }\n  \n  //0 - show icon display (first one that appears)\n  //1 - show pause or cancel view\n  //2 - confirm cancellation\n  \n  var AsleepOrOffline = ((props.printer.status == 1 || props.printer.status == 0) ? true : false)\n  var isDisplayingIcon = ((props.printer.status == 1 || props.printer.status == 0 || props.printer.status == 3) ? true : false)\n\n  /* FUNCTIONS */\n\n  function handleSlideAnimation()\n  {\n    /* VERSION 0.5 PRINTER CONTROL ANIMATIONS, NEEDS UPDATING */\n\n    //console.log('----------------------------------')\n\n    //console.log('old newSlide ', currentSlide)\n    //console.log('old newStrSlide ', currentSlideStr)\n\n    let toggleSlideDirection = toggleSlide[currentSlideStr]\n    let toggleStrSlideDirection = toggleStrSlide[currentSlideStr]\n\n    setSlide(toggleSlideDirection)\n    setCurrentSlideStr(toggleStrSlideDirection)\n    \n    //console.log('new current slide ', currentSlide)\n    //console.log('new current slide string ', currentSlideStr)\n\n    Animated.spring(slideAnimation, \n      {\n        toValue: 1,\n        easing: Easing.linear,\n        useNativeDriver: false,\n      }\n    ).start(() => { setSlideAnimation(new Animated.Value(0)) })\n  }\n\n  //Handles the stuff for doing the spin animation\n  function handleSpinAnimation()\n  {\n    //Gets the new spin\n    let newSpin = toggleSpin[currentStrSpin]\n    let newStrSpin = toggleStrSpin[currentStrSpin]\n\n    //Makes the new spin the current spin\n    setSpin(newSpin)\n    setStrSpin(newStrSpin)\n    \n    //Animatation instructions\n    Animated.timing(spinAnimation, \n      {\n        toValue: 1, \n        duration: 250,\n        easing: Easing.linear,\n        useNativeDriver: false\n      }\n    ).start(() => { setSpinAnimation(new Animated.Value(0)) })\n  }\n  \n  //Toggles between the printer controls view and the normal view\n  function toggleShowPause()\n  {\n    handleSlideAnimation()\n    handleSpinAnimation()\n    if (showPauseOrCancelView == 1)\n    {\n      setShowPause(0)\n    }else if (showPauseOrCancelView == 0)\n    {\n      setShowPause(1)\n    }\n  }\n\n  /* STARTUP */\n\n  useEffect(() => \n  {\n    //This is one of those lines that is required but I don't know why it is required\n    setSpin(spinUp)\n  }, [])\n\n  /* WHATS RENDERED */\n\n  return(\n    <View style={{ alignContent: 'center', alignItems: 'center', justifyContent: 'center' }}>\n      {(showPauseOrCancelView == 0) &&\n        <>\n          {(props.printer.status == 2) &&\n            <View style={{ flexDirection: 'column' }}>\n              <Text \n                style=\n                {{\n                  fontWeight: 'bold',\n                  fontSize: props.fontSize,\n                  color: 'white',\n                  marginTop: Math.round(windowHeight * 0.0308)\n                }}>\n                {printerProgress}%\n              </Text>\n              <Text style= { styles.printingViewText }>{props.compeletedText}</Text>\n            </View>\n          }\n          {(isDisplayingIcon) &&\n            icon[props.printer.status]\n          }\n        </>\n      }\n      {(showPauseOrCancelView == 1) &&\n        <Animated.View style={[styles.pauseOrCancelView, { transform: [{ translateY: currentSlide }] }]}>\n          <PauseOrCancelView printer={props.printer} toggleShowPause={toggleShowPause}/>\n        </Animated.View>\n      }\n      {(!props.isCardView && !AsleepOrOffline) &&\n        <TouchableOpacity onPress={() => toggleShowPause()}>\n          <AnimatedEntypo name='chevron-down' size={32} color='#7CFC00' style={{ marginTop: 20, transform: [{ rotate: currentSpin }] }}/>\n        </TouchableOpacity>\n      }\n    </View>\n  )\n}\n\nexport { OverlayView };"]},"metadata":{},"sourceType":"module"}
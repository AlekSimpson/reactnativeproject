{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"/Users/aleksimpson/Desktop/Cogniprint/ActionSheet.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Divider } from \"./Divider.js\";\nvar PRIMARY_COLOR = 'rgb(0,98,255)';\nvar WHITE = '#ffffff';\nvar BORDER_COLOR = '#DBDBDB';\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\n\nvar ActionSheet = function ActionSheet(props) {\n  var actionItems = props.actionItems;\n\n  var actionSheetItems = _toConsumableArray(actionItems);\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'column',\n      margin: 20,\n      backgroundColor: \"rgb(28, 46, 74)\",\n      borderRadius: 10,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.25,\n      shadowRadius: 3.84,\n      width: windowWidth - 20,\n      position: 'absolute',\n      bottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'gray',\n      fontSize: 15,\n      marginTop: 10,\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Sensitivity\"), React.createElement(Divider, {\n    width: windowWidth - 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), actionSheetItems.map(function (actionItem, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: actionItem.onPress,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, actionItem.label));\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.onCancel();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'rgb(32, 51, 84)',\n      borderRadius: 20,\n      width: windowWidth - 30,\n      height: windowHeight / 15,\n      alignItems: 'center',\n      alignSelf: 'center',\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.cancelButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Close\"))))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    flexDirection: 'column',\n    margin: 20,\n    backgroundColor: \"rgb(28, 46, 74)\",\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    width: windowWidth - 20,\n    height: windowHeight / 4,\n    position: 'absolute',\n    bottom: 0\n  },\n  buttonStyle: {\n    color: 'gray',\n    fontSize: 15,\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 10\n  },\n  cancelButton: {\n    color: 'gray',\n    marginTop: 10\n  }\n});\nActionSheet.propTypes = {\n  actionItems: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    label: PropTypes.string,\n    onPress: PropTypes.func\n  })).isRequired,\n  onCancel: PropTypes.func,\n  actionTextColor: PropTypes.string\n};\nActionSheet.defaultProps = {\n  actionItems: [],\n  onCancel: function onCancel() {},\n  actionTextColor: null\n};\nexport default ActionSheet;","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/ActionSheet.js"],"names":["PropTypes","React","TouchableOpacity","Divider","PRIMARY_COLOR","WHITE","BORDER_COLOR","windowWidth","Dimensions","get","width","windowHeight","height","ActionSheet","props","actionItems","actionSheetItems","styles","centeredView","flexDirection","margin","backgroundColor","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","position","bottom","color","fontSize","marginTop","marginLeft","map","actionItem","index","onPress","buttonStyle","label","onCancel","alignItems","alignSelf","marginBottom","cancelButton","StyleSheet","create","flex","justifyContent","modalView","propTypes","arrayOf","shape","id","oneOfType","number","string","func","isRequired","actionTextColor","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, Text, TouchableHighlight, View, Dimensions } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Divider } from './Divider.js';\n\nconst PRIMARY_COLOR = 'rgb(0,98,255)';\nconst WHITE = '#ffffff';\nconst BORDER_COLOR = '#DBDBDB';\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst ActionSheet = (props) => {\n  const { actionItems } = props;\n  \n  const actionSheetItems = [...actionItems]\n  //console.log('this is props ', props)\n  return (\n    <React.Fragment>\n      <View style={styles.centeredView}>\n        <View style={{\n            flexDirection: 'column',\n            margin: 20,\n            backgroundColor: \"rgb(28, 46, 74)\",\n            borderRadius: 10,\n            shadowColor: \"#000\",\n            shadowOffset: \n            {\n              width: 0,\n              height: 2\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            width: windowWidth - 20,\n            //height: ((windowHeight / 4) + (actionSheetItems.length * 10)),\n            position: 'absolute',\n            bottom: 0,\n          }}\n        >\n          <Text style={{ color: 'gray', fontSize: 15, marginTop: 10, marginLeft: 10 }}>Sensitivity</Text>\n          <Divider width={windowWidth - 20}/>\n          {\n            actionSheetItems.map((actionItem, index) => {\n              return(\n                <TouchableOpacity onPress={actionItem.onPress} key={index}>\n                  <Text style={ styles.buttonStyle }>{actionItem.label}</Text>\n                </TouchableOpacity>\n              )\n            })\n          }\n          <TouchableOpacity onPress={() => props.onCancel()}>\n            <View style={{ backgroundColor: 'rgb(32, 51, 84)', borderRadius: 20, width: windowWidth - 30, height: windowHeight / 15, alignItems: 'center', alignSelf: 'center', marginBottom: 10}}>\n              <Text style={styles.cancelButton}>Close</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </React.Fragment>\n  )\n}\n\nconst styles = StyleSheet.create({\n  centeredView: \n  {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n  },\n  modalView: \n  {\n    flexDirection: 'column',\n    margin: 20,\n    backgroundColor: \"rgb(28, 46, 74)\",\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: \n    {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    width: windowWidth - 20,\n    height: ((windowHeight / 4)),\n    position: 'absolute',\n    bottom: 0,\n  },\n  buttonStyle:\n  {\n    color: 'gray',\n    fontSize: 15,\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 10,\n  },\n  cancelButton:\n  {\n    color: 'gray',\n    marginTop: 10\n  }\n});\n\nActionSheet.propTypes = {\n  actionItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      label: PropTypes.string,\n      onPress: PropTypes.func\n    })\n  ).isRequired,\n  onCancel: PropTypes.func,\n  actionTextColor: PropTypes.string\n}\n\n\nActionSheet.defaultProps = {\n  actionItems: [],\n  onCancel: () => { },\n  actionTextColor: null\n}\n\n\nexport default ActionSheet;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as React from 'react';\nexport var darker = {\n  'one': 'rgb(35, 57, 109)',\n  'two': 'rgb(32, 51, 84)',\n  'three': 'rgb(28, 46, 74)',\n  'four': 'rgb(25, 40, 65)',\n  'five': 'rgb(21, 34, 56)'\n};\nexport var lighter = {\n  'one': 'rgb(123, 136, 158)',\n  'two': 'rgb(101, 116, 142)',\n  'three': 'rgb(79, 97, 125)',\n  'four': 'rgb(57, 77, 109)',\n  'five': 'rgb(35, 57, 93)'\n};\nexport function getColor(num) {\n  var red = Math.min(2.0 * num * (185.0 + 60.0), 245.0);\n  var floorVal = Math.floor(255.0 * red / 245.0);\n  var failConfSubtraction = num - 0.5;\n  var multiply = 185.0 * 2.0;\n  var green = Math.max(245.0 - floorVal * multiply * failConfSubtraction, 160.0);\n  return 'rgb(', red, ', ', green, ', ', 60.0 / 255.0, ')';\n}","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/Colors.js"],"names":["React","darker","lighter","getColor","num","red","Math","min","floorVal","floor","failConfSubtraction","multiply","green","max"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,MAAM,GAAG;AAAE,SAAO,kBAAT;AAA6B,SAAO,iBAApC;AAAuD,WAAS,iBAAhE;AAAmF,UAAO,iBAA1F;AAA6G,UAAO;AAApH,CAAf;AAEP,OAAO,IAAMC,OAAO,GAAG;AAAE,SAAM,oBAAR;AAA8B,SAAM,oBAApC;AAA0D,WAAQ,kBAAlE;AAAsF,UAAO,kBAA7F;AAAiH,UAAO;AAAxH,CAAhB;AAGP,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EACP;AACI,MAAIC,GAAG,GAAGC,IAAI,CAACC,GAAL,CAAS,MAAMH,GAAN,IAAa,QAAQ,IAArB,CAAT,EAAqC,KAArC,CAAV;AACA,MAAII,QAAQ,GAAGF,IAAI,CAACG,KAAL,CAAY,QAAQJ,GAAT,GAAc,KAAzB,CAAf;AACA,MAAIK,mBAAmB,GAAGN,GAAG,GAAG,GAAhC;AACA,MAAIO,QAAQ,GAAG,QAAQ,GAAvB;AACA,MAAIC,KAAK,GAAGN,IAAI,CAACO,GAAL,CAAS,QAASL,QAAQ,GAAGG,QAAX,GAAsBD,mBAAxC,EAA8D,KAA9D,CAAZ;AAEA,SAAO,QAAQL,GAAR,EAAY,IAAZ,EAAkBO,KAAlB,EAAwB,IAAxB,EAA8B,OAAK,KAAnC,EAAyC,GAAhD;AACH","sourcesContent":["import * as React from 'react';\n\nexport const darker = { 'one': 'rgb(35, 57, 109)', 'two': 'rgb(32, 51, 84)', 'three': 'rgb(28, 46, 74)', 'four':'rgb(25, 40, 65)', 'five':'rgb(21, 34, 56)' }\n\nexport const lighter = { 'one':'rgb(123, 136, 158)', 'two':'rgb(101, 116, 142)', 'three':'rgb(79, 97, 125)', 'four':'rgb(57, 77, 109)', 'five':'rgb(35, 57, 93)' }\n\n//Gets the gradient color based on the algorithms percent confidence of failure\nexport function getColor(num)\n{\n    let red = Math.min(2.0 * num * (185.0 + 60.0), 245.0)\n    let floorVal = Math.floor((255.0 * red)/245.0)\n    let failConfSubtraction = num - 0.5\n    let multiply = 185.0 * 2.0\n    let green = Math.max(245.0 - (floorVal * multiply * failConfSubtraction), 160.0)\n\n    return 'rgb(', red,', ', green,', ', 60.0/255.0,')'\n}\n"]},"metadata":{},"sourceType":"module"}
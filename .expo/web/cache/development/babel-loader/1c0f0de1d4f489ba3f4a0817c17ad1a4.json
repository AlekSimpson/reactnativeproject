{"ast":null,"code":"export var createPrint = \"\\n  mutation CreatePrint(\\n    $input: CreatePrintInput!\\n    $condition: ModelPrintConditionInput\\n  ) {\\n    createPrint(input: $input, condition: $condition) {\\n      owner\\n      id\\n      printerID\\n      failure\\n      printerStates {\\n        createdAt\\n        owner\\n        printID\\n        picture {\\n          bucket\\n          region\\n          key\\n        }\\n        progress\\n        failure {\\n          currentPred\\n          previousPred\\n        }\\n        temps {\\n          head {\\n            currentTemp\\n            goalTemp\\n          }\\n          bed {\\n            currentTemp\\n            goalTemp\\n          }\\n        }\\n        timeRemaining\\n        printTime\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var updatePrint = \"\\n  mutation UpdatePrint(\\n    $input: UpdatePrintInput!\\n    $condition: ModelPrintConditionInput\\n  ) {\\n    updatePrint(input: $input, condition: $condition) {\\n      owner\\n      id\\n      printerID\\n      failure\\n      printerStates {\\n        createdAt\\n        owner\\n        printID\\n        picture {\\n          bucket\\n          region\\n          key\\n        }\\n        progress\\n        failure {\\n          currentPred\\n          previousPred\\n        }\\n        temps {\\n          head {\\n            currentTemp\\n            goalTemp\\n          }\\n          bed {\\n            currentTemp\\n            goalTemp\\n          }\\n        }\\n        timeRemaining\\n        printTime\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var deletePrint = \"\\n  mutation DeletePrint(\\n    $input: DeletePrintInput!\\n    $condition: ModelPrintConditionInput\\n  ) {\\n    deletePrint(input: $input, condition: $condition) {\\n      owner\\n      id\\n      printerID\\n      failure\\n      printerStates {\\n        createdAt\\n        owner\\n        printID\\n        picture {\\n          bucket\\n          region\\n          key\\n        }\\n        progress\\n        failure {\\n          currentPred\\n          previousPred\\n        }\\n        temps {\\n          head {\\n            currentTemp\\n            goalTemp\\n          }\\n          bed {\\n            currentTemp\\n            goalTemp\\n          }\\n        }\\n        timeRemaining\\n        printTime\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var createPrinter = \"\\n  mutation CreatePrinter(\\n    $input: CreatePrinterInput!\\n    $condition: ModelPrinterConditionInput\\n  ) {\\n    createPrinter(input: $input, condition: $condition) {\\n      updatedAt\\n      printerState {\\n        createdAt\\n        owner\\n        printID\\n        picture {\\n          bucket\\n          region\\n          key\\n        }\\n        progress\\n        failure {\\n          currentPred\\n          previousPred\\n        }\\n        temps {\\n          head {\\n            currentTemp\\n            goalTemp\\n          }\\n          bed {\\n            currentTemp\\n            goalTemp\\n          }\\n        }\\n        timeRemaining\\n        printTime\\n      }\\n      status\\n      owner\\n      id\\n      picture {\\n        bucket\\n        region\\n        key\\n      }\\n      name\\n      notifyOnFail\\n      pauseOnFail\\n      sensitivity\\n    }\\n  }\\n\";\nexport var updatePrinter = \"\\n  mutation UpdatePrinter(\\n    $input: UpdatePrinterInput!\\n    $condition: ModelPrinterConditionInput\\n  ) {\\n    updatePrinter(input: $input, condition: $condition) {\\n      updatedAt\\n      printerState {\\n        createdAt\\n        owner\\n        printID\\n        picture {\\n          bucket\\n          region\\n          key\\n        }\\n        progress\\n        failure {\\n          currentPred\\n          previousPred\\n        }\\n        temps {\\n          head {\\n            currentTemp\\n            goalTemp\\n          }\\n          bed {\\n            currentTemp\\n            goalTemp\\n          }\\n        }\\n        timeRemaining\\n        printTime\\n      }\\n      status\\n      owner\\n      id\\n      picture {\\n        bucket\\n        region\\n        key\\n      }\\n      name\\n      notifyOnFail\\n      pauseOnFail\\n      sensitivity\\n    }\\n  }\\n\";\nexport var deletePrinter = \"\\n  mutation DeletePrinter(\\n    $input: DeletePrinterInput!\\n    $condition: ModelPrinterConditionInput\\n  ) {\\n    deletePrinter(input: $input, condition: $condition) {\\n      updatedAt\\n      printerState {\\n        createdAt\\n        owner\\n        printID\\n        picture {\\n          bucket\\n          region\\n          key\\n        }\\n        progress\\n        failure {\\n          currentPred\\n          previousPred\\n        }\\n        temps {\\n          head {\\n            currentTemp\\n            goalTemp\\n          }\\n          bed {\\n            currentTemp\\n            goalTemp\\n          }\\n        }\\n        timeRemaining\\n        printTime\\n      }\\n      status\\n      owner\\n      id\\n      picture {\\n        bucket\\n        region\\n        key\\n      }\\n      name\\n      notifyOnFail\\n      pauseOnFail\\n      sensitivity\\n    }\\n  }\\n\";","map":{"version":3,"sources":["/Users/aleksimpson/Desktop/Cogniprint/graphql/mutations.js"],"names":["createPrint","updatePrint","deletePrint","createPrinter","updatePrinter","deletePrinter"],"mappings":"AAGA,OAAO,IAAMA,WAAW,kvBAAjB;AA0CP,OAAO,IAAMC,WAAW,kvBAAjB;AA0CP,OAAO,IAAMC,WAAW,kvBAAjB;AA0CP,OAAO,IAAMC,aAAa,m2BAAnB;AAiDP,OAAO,IAAMC,aAAa,m2BAAnB;AAiDP,OAAO,IAAMC,aAAa,m2BAAnB","sourcesContent":["/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const createPrint = /* GraphQL */ `\n  mutation CreatePrint(\n    $input: CreatePrintInput!\n    $condition: ModelPrintConditionInput\n  ) {\n    createPrint(input: $input, condition: $condition) {\n      owner\n      id\n      printerID\n      failure\n      printerStates {\n        createdAt\n        owner\n        printID\n        picture {\n          bucket\n          region\n          key\n        }\n        progress\n        failure {\n          currentPred\n          previousPred\n        }\n        temps {\n          head {\n            currentTemp\n            goalTemp\n          }\n          bed {\n            currentTemp\n            goalTemp\n          }\n        }\n        timeRemaining\n        printTime\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updatePrint = /* GraphQL */ `\n  mutation UpdatePrint(\n    $input: UpdatePrintInput!\n    $condition: ModelPrintConditionInput\n  ) {\n    updatePrint(input: $input, condition: $condition) {\n      owner\n      id\n      printerID\n      failure\n      printerStates {\n        createdAt\n        owner\n        printID\n        picture {\n          bucket\n          region\n          key\n        }\n        progress\n        failure {\n          currentPred\n          previousPred\n        }\n        temps {\n          head {\n            currentTemp\n            goalTemp\n          }\n          bed {\n            currentTemp\n            goalTemp\n          }\n        }\n        timeRemaining\n        printTime\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deletePrint = /* GraphQL */ `\n  mutation DeletePrint(\n    $input: DeletePrintInput!\n    $condition: ModelPrintConditionInput\n  ) {\n    deletePrint(input: $input, condition: $condition) {\n      owner\n      id\n      printerID\n      failure\n      printerStates {\n        createdAt\n        owner\n        printID\n        picture {\n          bucket\n          region\n          key\n        }\n        progress\n        failure {\n          currentPred\n          previousPred\n        }\n        temps {\n          head {\n            currentTemp\n            goalTemp\n          }\n          bed {\n            currentTemp\n            goalTemp\n          }\n        }\n        timeRemaining\n        printTime\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createPrinter = /* GraphQL */ `\n  mutation CreatePrinter(\n    $input: CreatePrinterInput!\n    $condition: ModelPrinterConditionInput\n  ) {\n    createPrinter(input: $input, condition: $condition) {\n      updatedAt\n      printerState {\n        createdAt\n        owner\n        printID\n        picture {\n          bucket\n          region\n          key\n        }\n        progress\n        failure {\n          currentPred\n          previousPred\n        }\n        temps {\n          head {\n            currentTemp\n            goalTemp\n          }\n          bed {\n            currentTemp\n            goalTemp\n          }\n        }\n        timeRemaining\n        printTime\n      }\n      status\n      owner\n      id\n      picture {\n        bucket\n        region\n        key\n      }\n      name\n      notifyOnFail\n      pauseOnFail\n      sensitivity\n    }\n  }\n`;\nexport const updatePrinter = /* GraphQL */ `\n  mutation UpdatePrinter(\n    $input: UpdatePrinterInput!\n    $condition: ModelPrinterConditionInput\n  ) {\n    updatePrinter(input: $input, condition: $condition) {\n      updatedAt\n      printerState {\n        createdAt\n        owner\n        printID\n        picture {\n          bucket\n          region\n          key\n        }\n        progress\n        failure {\n          currentPred\n          previousPred\n        }\n        temps {\n          head {\n            currentTemp\n            goalTemp\n          }\n          bed {\n            currentTemp\n            goalTemp\n          }\n        }\n        timeRemaining\n        printTime\n      }\n      status\n      owner\n      id\n      picture {\n        bucket\n        region\n        key\n      }\n      name\n      notifyOnFail\n      pauseOnFail\n      sensitivity\n    }\n  }\n`;\nexport const deletePrinter = /* GraphQL */ `\n  mutation DeletePrinter(\n    $input: DeletePrinterInput!\n    $condition: ModelPrinterConditionInput\n  ) {\n    deletePrinter(input: $input, condition: $condition) {\n      updatedAt\n      printerState {\n        createdAt\n        owner\n        printID\n        picture {\n          bucket\n          region\n          key\n        }\n        progress\n        failure {\n          currentPred\n          previousPred\n        }\n        temps {\n          head {\n            currentTemp\n            goalTemp\n          }\n          bed {\n            currentTemp\n            goalTemp\n          }\n        }\n        timeRemaining\n        printTime\n      }\n      status\n      owner\n      id\n      picture {\n        bucket\n        region\n        key\n      }\n      name\n      notifyOnFail\n      pauseOnFail\n      sensitivity\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}